// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A billing subscription alias.</summary>
    public partial class BillingSubscriptionAliasProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionProperties __billingSubscriptionProperties = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingSubscriptionProperties();

        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string AutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).AutoRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).AutoRenew = value ?? null; }

        /// <summary>The beneficiary of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary Beneficiary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Beneficiary; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Beneficiary = value ?? null /* model class */; }

        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string BeneficiaryObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BeneficiaryObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BeneficiaryObjectId = value ?? null; }

        /// <summary>The provisioning tenant of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string BeneficiaryTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BeneficiaryTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BeneficiaryTenantId = value ?? null; }

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string BillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingFrequency = value ?? null; }

        /// <summary>Dictionary of billing policies associated with the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies BillingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingPolicy; }

        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileId = value ?? null; }

        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string BillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileName; }

        /// <summary>Backing field for <see cref="BillingSubscriptionId" /> property.</summary>
        private string _billingSubscriptionId;

        /// <summary>The ID of the billing subscription with the subscription alias.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingSubscriptionId { get => this._billingSubscriptionId; }

        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ConsumptionCostCenter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ConsumptionCostCenter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ConsumptionCostCenter = value ?? null; }

        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerId = value ?? null; }

        /// <summary>The ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string CustomerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerName; }

        /// <summary>The name of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).DisplayName = value ?? null; }

        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string EnrollmentAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountDisplayName; }

        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string EnrollmentAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountId; }

        /// <summary>
        /// Enrollment Account Subscription details. This field is available only for the Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails EnrollmentAccountSubscriptionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetail; }

        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate; }

        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus; }

        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionId = value ?? null; }

        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string InvoiceSectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionName; }

        /// <summary>
        /// The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing
        /// accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount LastMonthCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthCharge; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string LastMonthChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthChargeCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public float? LastMonthChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthChargeValue; }

        /// <summary>Internal Acessors for BillingSubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasPropertiesInternal.BillingSubscriptionId { get => this._billingSubscriptionId; set { {_billingSubscriptionId = value;} } }

        /// <summary>Internal Acessors for Beneficiary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.Beneficiary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Beneficiary; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Beneficiary = value; }

        /// <summary>Internal Acessors for BillingPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.BillingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingPolicy = value; }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileDisplayName = value; }

        /// <summary>Internal Acessors for BillingProfileName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.BillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).BillingProfileName = value; }

        /// <summary>Internal Acessors for CustomerDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerDisplayName = value; }

        /// <summary>Internal Acessors for CustomerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.CustomerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).CustomerName = value; }

        /// <summary>Internal Acessors for EnrollmentAccountDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountDisplayName = value; }

        /// <summary>Internal Acessors for EnrollmentAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountId = value; }

        /// <summary>Internal Acessors for EnrollmentAccountSubscriptionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountSubscriptionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetail = value; }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate
        /// </summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate = value; }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus = value; }

        /// <summary>Internal Acessors for InvoiceSectionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionDisplayName = value; }

        /// <summary>Internal Acessors for InvoiceSectionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.InvoiceSectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).InvoiceSectionName = value; }

        /// <summary>Internal Acessors for LastMonthCharge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.LastMonthCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthCharge = value; }

        /// <summary>Internal Acessors for LastMonthChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.LastMonthChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthChargeCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthChargeCurrency = value; }

        /// <summary>Internal Acessors for LastMonthChargeValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.LastMonthChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthChargeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).LastMonthChargeValue = value; }

        /// <summary>Internal Acessors for MonthToDateCharge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.MonthToDateCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateCharge = value; }

        /// <summary>Internal Acessors for MonthToDateChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.MonthToDateChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateChargeCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateChargeCurrency = value; }

        /// <summary>Internal Acessors for MonthToDateChargeValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.MonthToDateChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateChargeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateChargeValue = value; }

        /// <summary>Internal Acessors for NextBillingCycleDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.NextBillingCycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).NextBillingCycleDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).NextBillingCycleDetail = value; }

        /// <summary>Internal Acessors for NextBillingCycleDetailBillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).NextBillingCycleDetailBillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).NextBillingCycleDetailBillingFrequency = value; }

        /// <summary>Internal Acessors for OfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.OfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).OfferId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).OfferId = value; }

        /// <summary>Internal Acessors for OperationStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.OperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).OperationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).OperationStatus = value; }

        /// <summary>Internal Acessors for ProductCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ProductCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductCategory = value; }

        /// <summary>Internal Acessors for ProductType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ProductType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductType = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProvisioningState = value; }

        /// <summary>Internal Acessors for PurchaseDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).PurchaseDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).PurchaseDate = value; }

        /// <summary>Internal Acessors for RenewalTermDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetail = value; }

        /// <summary>Internal Acessors for RenewalTermDetailBillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailBillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailBillingFrequency = value; }

        /// <summary>Internal Acessors for RenewalTermDetailProductId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailProductId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailProductId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailProductTypeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailProductTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailProductTypeId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailSkuId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailSkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailSkuId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailTermDuration</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailTermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailTermDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailTermDuration = value; }

        /// <summary>Internal Acessors for RenewalTermDetailTermEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailTermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailTermEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailTermEndDate = value; }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.Reseller { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Reseller; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Reseller = value; }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResellerDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResellerDescription = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResellerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResellerId = value; }

        /// <summary>Internal Acessors for ResourceUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ResourceUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResourceUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResourceUri = value; }

        /// <summary>Internal Acessors for SkuDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SkuDescription = value; }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Status = value; }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SubscriptionId = value; }

        /// <summary>Internal Acessors for SuspensionReason</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SuspensionReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SuspensionReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SuspensionReason = value; }

        /// <summary>Internal Acessors for SuspensionReasonDetail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SuspensionReasonDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SuspensionReasonDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SuspensionReasonDetail = value; }

        /// <summary>Internal Acessors for SystemOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SystemOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverride = value; }

        /// <summary>Internal Acessors for SystemOverrideCancellation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverrideCancellation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverrideCancellation = value; }

        /// <summary>Internal Acessors for SystemOverrideCancellationAllowedEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverrideCancellationAllowedEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverrideCancellationAllowedEndDate = value; }

        /// <summary>Internal Acessors for TermEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.TermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermEndDate = value; }

        /// <summary>Internal Acessors for TermStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.TermStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermStartDate = value; }

        /// <summary>
        /// The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement
        /// billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount MonthToDateCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateCharge; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string MonthToDateChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateChargeCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public float? MonthToDateChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).MonthToDateChargeValue; }

        /// <summary>Next billing cycle details of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails NextBillingCycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).NextBillingCycleDetail; }

        /// <summary>Billing frequency of the product under the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).NextBillingCycleDetailBillingFrequency; }

        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string OfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).OfferId; }

        /// <summary>
        /// The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write
        /// operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest
        /// API version for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string OperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).OperationStatus; }

        /// <summary>
        /// The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware,
        /// ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ProductCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductCategory; }

        /// <summary>Type of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ProductType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductType; }

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProductTypeId = value ?? null; }

        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProvisioningState; }

        /// <summary>The tenant in which the subscription is provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ProvisioningTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProvisioningTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ProvisioningTenantId = value ?? null; }

        /// <summary>Purchase date of the product in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).PurchaseDate; }

        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public long? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Quantity = value ?? default(long); }

        /// <summary>Details for the next renewal term of a subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails RenewalTermDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetail; }

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string RenewalTermDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailBillingFrequency; }

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string RenewalTermDetailProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailProductId; }

        /// <summary>Type Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string RenewalTermDetailProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailProductTypeId; }

        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public long? RenewalTermDetailQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailQuantity = value ?? default(long); }

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string RenewalTermDetailSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailSkuId; }

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string RenewalTermDetailTermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailTermDuration; }

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? RenewalTermDetailTermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).RenewalTermDetailTermEndDate; }

        /// <summary>
        /// Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller Reseller { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Reseller; }

        /// <summary>The name of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResellerDescription; }

        /// <summary>The MPN ID of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResellerId; }

        /// <summary>Unique identifier of the linked resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string ResourceUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).ResourceUri; }

        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for billing
        /// accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SkuDescription; }

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SkuId = value ?? null; }

        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).Status; }

        /// <summary>The ID of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SubscriptionId; }

        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public System.Collections.Generic.List<string> SuspensionReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SuspensionReason; }

        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SuspensionReasonDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SuspensionReasonDetail; }

        /// <summary>System imposed policies that regulate behavior of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides SystemOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverride = value ?? null /* model class */; }

        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverrideCancellation; }

        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).SystemOverrideCancellationAllowedEndDate; }

        /// <summary>The ID that uniquely identifies a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TenantId = value ?? null; }

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string TermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermDuration = value ?? null; }

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? TermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermEndDate; }

        /// <summary>Start date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? TermStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)__billingSubscriptionProperties).TermStartDate; }

        /// <summary>Creates an new <see cref="BillingSubscriptionAliasProperties" /> instance.</summary>
        public BillingSubscriptionAliasProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__billingSubscriptionProperties), __billingSubscriptionProperties);
            await eventListener.AssertObjectIsValid(nameof(__billingSubscriptionProperties), __billingSubscriptionProperties);
        }
    }
    /// A billing subscription alias.
    public partial interface IBillingSubscriptionAliasProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionProperties
    {
        /// <summary>The ID of the billing subscription with the subscription alias.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID of the billing subscription with the subscription alias.",
        SerializedName = @"billingSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingSubscriptionId { get;  }

    }
    /// A billing subscription alias.
    internal partial interface IBillingSubscriptionAliasPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal
    {
        /// <summary>The ID of the billing subscription with the subscription alias.</summary>
        string BillingSubscriptionId { get; set; }

    }
}