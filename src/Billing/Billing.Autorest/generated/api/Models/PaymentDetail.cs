// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>Information about payment related to a savings plan order.</summary>
    public partial class PaymentDetail :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentDetail,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentDetailInternal
    {

        /// <summary>Backing field for <see cref="BillingCurrencyTotal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice _billingCurrencyTotal;

        /// <summary>
        /// Amount charged in Billing currency. Tax not included. Is null for future payments
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice BillingCurrencyTotal { get => (this._billingCurrencyTotal = this._billingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Price()); set => this._billingCurrencyTotal = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public double? BillingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)BillingCurrencyTotal).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)BillingCurrencyTotal).Amount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)BillingCurrencyTotal).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)BillingCurrencyTotal).CurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="DueDate" /> property.</summary>
        private global::System.DateTime? _dueDate;

        /// <summary>Date when the payment needs to be done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? DueDate { get => this._dueDate; set => this._dueDate = value; }

        /// <summary>Backing field for <see cref="ExtendedStatusInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo _extendedStatusInfo;

        /// <summary>Extended status information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo ExtendedStatusInfo { get => (this._extendedStatusInfo = this._extendedStatusInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ExtendedStatusInfo()); }

        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExtendedStatusInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Message = value ?? null; }

        /// <summary>Status code providing additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExtendedStatusInfoStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).StatusCode = value ?? null; }

        /// <summary>Internal Acessors for BillingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentDetailInternal.BillingCurrencyTotal { get => (this._billingCurrencyTotal = this._billingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Price()); set { {_billingCurrencyTotal = value;} } }

        /// <summary>Internal Acessors for ExtendedStatusInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentDetailInternal.ExtendedStatusInfo { get => (this._extendedStatusInfo = this._extendedStatusInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ExtendedStatusInfo()); set { {_extendedStatusInfo = value;} } }

        /// <summary>Internal Acessors for ExtendedStatusInfoProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentDetailInternal.ExtendedStatusInfoProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Property = value; }

        /// <summary>Internal Acessors for PricingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentDetailInternal.PricingCurrencyTotal { get => (this._pricingCurrencyTotal = this._pricingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Price()); set { {_pricingCurrencyTotal = value;} } }

        /// <summary>Backing field for <see cref="PaymentDate" /> property.</summary>
        private global::System.DateTime? _paymentDate;

        /// <summary>Date when the transaction is completed. Null when it is scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? PaymentDate { get => this._paymentDate; set => this._paymentDate = value; }

        /// <summary>Backing field for <see cref="PricingCurrencyTotal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice _pricingCurrencyTotal;

        /// <summary>Amount in pricing currency. Tax not included.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice PricingCurrencyTotal { get => (this._pricingCurrencyTotal = this._pricingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Price()); set => this._pricingCurrencyTotal = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public double? PricingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)PricingCurrencyTotal).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)PricingCurrencyTotal).Amount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PricingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)PricingCurrencyTotal).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)PricingCurrencyTotal).CurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>
        /// Describes whether the payment is completed, failed, pending, cancelled or scheduled in the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>The subscription that has failed credit line check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).SubscriptionId = value ?? null; }

        /// <summary>Creates an new <see cref="PaymentDetail" /> instance.</summary>
        public PaymentDetail()
        {

        }
    }
    /// Information about payment related to a savings plan order.
    public partial interface IPaymentDetail :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? BillingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Date when the payment needs to be done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Date when the payment needs to be done.",
        SerializedName = @"dueDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DueDate { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The message giving detailed information about the status code.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedStatusInfoMessage { get;  }
        /// <summary>Status code providing additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Status code providing additional information.",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedStatusInfoStatusCode { get;  }
        /// <summary>Date when the transaction is completed. Null when it is scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Date when the transaction is completed. Null when it is scheduled.",
        SerializedName = @"paymentDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PaymentDate { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>
        /// Describes whether the payment is completed, failed, pending, cancelled or scheduled in the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes whether the payment is completed, failed, pending, cancelled or scheduled in the future.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Failed", "Scheduled", "Cancelled", "Completed", "Pending")]
        string Status { get; set; }
        /// <summary>The subscription that has failed credit line check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The subscription that has failed credit line check.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }

    }
    /// Information about payment related to a savings plan order.
    internal partial interface IPaymentDetailInternal

    {
        /// <summary>
        /// Amount charged in Billing currency. Tax not included. Is null for future payments
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice BillingCurrencyTotal { get; set; }

        double? BillingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string BillingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Date when the payment needs to be done.</summary>
        global::System.DateTime? DueDate { get; set; }
        /// <summary>Extended status information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo ExtendedStatusInfo { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        string ExtendedStatusInfoMessage { get; set; }
        /// <summary>Properties specific to credit line check failure</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoProperties ExtendedStatusInfoProperty { get; set; }
        /// <summary>Status code providing additional information.</summary>
        string ExtendedStatusInfoStatusCode { get; set; }
        /// <summary>Date when the transaction is completed. Null when it is scheduled.</summary>
        global::System.DateTime? PaymentDate { get; set; }
        /// <summary>Amount in pricing currency. Tax not included.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice PricingCurrencyTotal { get; set; }

        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>
        /// Describes whether the payment is completed, failed, pending, cancelled or scheduled in the future.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Failed", "Scheduled", "Cancelled", "Completed", "Pending")]
        string Status { get; set; }
        /// <summary>The subscription that has failed credit line check.</summary>
        string SubscriptionId { get; set; }

    }
}