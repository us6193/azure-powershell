// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A billing property.</summary>
    public partial class BillingProperty :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingProperty,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1 __proxyResourceWithTags1 = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ProxyResourceWithTags1();

        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AccountAdminNotificationEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).AccountAdminNotificationEmailAddress; }

        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountAgreementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountAgreementType; }

        /// <summary>The name of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountId; }

        /// <summary>
        /// The country of the individual or organization that is responsible for the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountSoldToCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountSoldToCountry; }

        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountStatus; }

        /// <summary>Reason for the specified billing account status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountStatusReasonCode; }

        /// <summary>The tier of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountSubType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountSubType; }

        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountType; }

        /// <summary>
        /// The billing currency for the subscription. Available for billing accounts with agreement type Enterprise Agreement
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingCurrency; }

        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileId; }

        /// <summary>
        /// The payment method family of the primary payment method for the billing profile.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfilePaymentMethodFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfilePaymentMethodFamily; }

        /// <summary>The payment method type of the primary payment method for the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfilePaymentMethodType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfilePaymentMethodType; }

        /// <summary>The billing profile spending limit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileSpendingLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileSpendingLimit; }

        /// <summary>The details of billing profile spending limit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISpendingLimitDetails> BillingProfileSpendingLimitDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileSpendingLimitDetail; }

        /// <summary>The status of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileStatus; }

        /// <summary>Reason for the specified billing profile status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileStatusReasonCode; }

        /// <summary>The Azure AD tenant ID of the billing account for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingTenantId; }

        /// <summary>
        /// The cost center applied to the subscription. Available for agreement type Microsoft Customer Agreement and Microsoft Partner
        /// Agreement. This property can be updated via patch.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CostCenter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CostCenter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CostCenter = value ?? null; }

        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerId; }

        /// <summary>
        /// Identifies the status of an customer. This is an upcoming property that will be populated in the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerStatus; }

        /// <summary>The name of the department</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailDepartmentDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailDepartmentDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailDepartmentDisplayName = value ?? null; }

        /// <summary>The ID that uniquely identifies the department.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailDepartmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailDepartmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailDepartmentId = value ?? null; }

        /// <summary>The name of the enrollment account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailEnrollmentAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailEnrollmentAccountDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailEnrollmentAccountDisplayName = value ?? null; }

        /// <summary>The ID that uniquely identifies an enrollment account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailEnrollmentAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailEnrollmentAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailEnrollmentAccountId = value ?? null; }

        /// <summary>The status of the enrollment account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailEnrollmentAccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetailEnrollmentAccountStatus = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id; }

        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionId; }

        /// <summary>Identifies the status of an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionStatus; }

        /// <summary>Reason for the specified invoice section status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionStatusReasonCode; }

        /// <summary>Indicates whether user is the account admin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? IsAccountAdmin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).IsAccountAdmin; }

        /// <summary>
        /// Specifies if the billing account for the subscription is transitioned from a Microsoft Online Service Program to a Microsoft
        /// Customer Agreement (MCA) account. Will be present and value will be true if its a transitioned billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? IsTransitionedBillingAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).IsTransitionedBillingAccount; }

        /// <summary>Internal Acessors for AccountAdminNotificationEmailAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.AccountAdminNotificationEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).AccountAdminNotificationEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).AccountAdminNotificationEmailAddress = value; }

        /// <summary>Internal Acessors for BillingAccountAgreementType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountAgreementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountAgreementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountAgreementType = value; }

        /// <summary>Internal Acessors for BillingAccountDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountDisplayName = value; }

        /// <summary>Internal Acessors for BillingAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountId = value; }

        /// <summary>Internal Acessors for BillingAccountSoldToCountry</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountSoldToCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountSoldToCountry; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountSoldToCountry = value; }

        /// <summary>Internal Acessors for BillingAccountStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountStatus = value; }

        /// <summary>Internal Acessors for BillingAccountStatusReasonCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountStatusReasonCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountStatusReasonCode = value; }

        /// <summary>Internal Acessors for BillingAccountSubType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountSubType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountSubType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountSubType = value; }

        /// <summary>Internal Acessors for BillingAccountType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingAccountType = value; }

        /// <summary>Internal Acessors for BillingCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingCurrency = value; }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileDisplayName = value; }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileId = value; }

        /// <summary>Internal Acessors for BillingProfilePaymentMethodFamily</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfilePaymentMethodFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfilePaymentMethodFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfilePaymentMethodFamily = value; }

        /// <summary>Internal Acessors for BillingProfilePaymentMethodType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfilePaymentMethodType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfilePaymentMethodType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfilePaymentMethodType = value; }

        /// <summary>Internal Acessors for BillingProfileSpendingLimit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfileSpendingLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileSpendingLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileSpendingLimit = value; }

        /// <summary>Internal Acessors for BillingProfileSpendingLimitDetail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISpendingLimitDetails> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfileSpendingLimitDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileSpendingLimitDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileSpendingLimitDetail = value; }

        /// <summary>Internal Acessors for BillingProfileStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfileStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileStatus = value; }

        /// <summary>Internal Acessors for BillingProfileStatusReasonCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingProfileStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileStatusReasonCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingProfileStatusReasonCode = value; }

        /// <summary>Internal Acessors for BillingTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.BillingTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).BillingTenantId = value; }

        /// <summary>Internal Acessors for CustomerDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerDisplayName = value; }

        /// <summary>Internal Acessors for CustomerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerId = value; }

        /// <summary>Internal Acessors for CustomerStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.CustomerStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).CustomerStatus = value; }

        /// <summary>Internal Acessors for EnrollmentDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesEnrollmentDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.EnrollmentDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).EnrollmentDetail = value; }

        /// <summary>Internal Acessors for InvoiceSectionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionDisplayName = value; }

        /// <summary>Internal Acessors for InvoiceSectionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionId = value; }

        /// <summary>Internal Acessors for InvoiceSectionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.InvoiceSectionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionStatus = value; }

        /// <summary>Internal Acessors for InvoiceSectionStatusReasonCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.InvoiceSectionStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionStatusReasonCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).InvoiceSectionStatusReasonCode = value; }

        /// <summary>Internal Acessors for IsAccountAdmin</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.IsAccountAdmin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).IsAccountAdmin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).IsAccountAdmin = value; }

        /// <summary>Internal Acessors for IsTransitionedBillingAccount</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.IsTransitionedBillingAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).IsTransitionedBillingAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).IsTransitionedBillingAccount = value; }

        /// <summary>Internal Acessors for ProductId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.ProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).ProductId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).ProductId = value; }

        /// <summary>Internal Acessors for ProductName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.ProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).ProductName = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingPropertyProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SkuDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SkuDescription = value; }

        /// <summary>Internal Acessors for SkuId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.SkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SkuId = value; }

        /// <summary>Internal Acessors for SubscriptionBillingStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.SubscriptionBillingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingStatus = value; }

        /// <summary>Internal Acessors for SubscriptionBillingStatusDetail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.SubscriptionBillingStatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingStatusDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingStatusDetail = value; }

        /// <summary>Internal Acessors for SubscriptionBillingType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.SubscriptionBillingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingType = value; }

        /// <summary>Internal Acessors for SubscriptionServiceUsageAddress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesSubscriptionServiceUsageAddress Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.SubscriptionServiceUsageAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddress = value; }

        /// <summary>Internal Acessors for SubscriptionWorkloadType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyInternal.SubscriptionWorkloadType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionWorkloadType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionWorkloadType = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name; }

        /// <summary>The ID that uniquely identifies a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).ProductId; }

        /// <summary>The ID that uniquely identifies a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).ProductName; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyProperties _property;

        /// <summary>A billing property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingPropertyProperties()); set => this._property = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The sku description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SkuDescription; }

        /// <summary>The ID that uniquely identifies a sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SkuId; }

        /// <summary>The subscription status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionBillingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingStatus; }

        /// <summary>The reason codes for the subscription status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SubscriptionBillingStatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingStatusDetail; }

        /// <summary>The type of billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionBillingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionBillingType; }

        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressCity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressCity = value ?? null; }

        /// <summary>Company name. Optional for MCA Individual (Pay-as-you-go).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressCompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressCompanyName = value ?? null; }

        /// <summary>Country code uses ISO 3166-1 Alpha-2 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressCountry; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressCountry = value ?? null; }

        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressDistrict { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressDistrict; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressDistrict = value ?? null; }

        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressEmail = value ?? null; }

        /// <summary>First name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressFirstName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressFirstName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressFirstName = value ?? null; }

        /// <summary>Indicates if the address is incomplete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? SubscriptionServiceUsageAddressIsValidAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressIsValidAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressIsValidAddress = value ?? default(bool); }

        /// <summary>Last name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressLastName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLastName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLastName = value ?? null; }

        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressLine1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLine1; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLine1 = value ?? null; }

        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressLine2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLine2; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLine2 = value ?? null; }

        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressLine3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLine3; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressLine3 = value ?? null; }

        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressMiddleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressMiddleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressMiddleName = value ?? null; }

        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressPhoneNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressPhoneNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressPhoneNumber = value ?? null; }

        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressPostalCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressPostalCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressPostalCode = value ?? null; }

        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionServiceUsageAddressRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionServiceUsageAddressRegion = value ?? null; }

        /// <summary>The Azure workload type of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionWorkloadType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesInternal)Property).SubscriptionWorkloadType; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>
        /// Dictionary of metadata associated with the resource. It may not be populated for all resource types. Maximum key/value
        /// length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? /
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type; }

        /// <summary>Creates an new <see cref="BillingProperty" /> instance.</summary>
        public BillingProperty()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
            await eventListener.AssertObjectIsValid(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
        }
    }
    /// A billing property.
    public partial interface IBillingProperty :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1
    {
        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.",
        SerializedName = @"accountAdminNotificationEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string AccountAdminNotificationEmailAddress { get;  }
        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of agreement.",
        SerializedName = @"billingAccountAgreementType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "MicrosoftCustomerAgreement", "EnterpriseAgreement", "MicrosoftOnlineServicesProgram", "MicrosoftPartnerAgreement")]
        string BillingAccountAgreementType { get;  }
        /// <summary>The name of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the billing account.",
        SerializedName = @"billingAccountDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The fully qualified ID that uniquely identifies a billing account.",
        SerializedName = @"billingAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountId { get;  }
        /// <summary>
        /// The country of the individual or organization that is responsible for the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The country of the individual or organization that is responsible for the billing account.",
        SerializedName = @"billingAccountSoldToCountry",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountSoldToCountry { get;  }
        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current status of the billing account.",
        SerializedName = @"billingAccountStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "UnderReview", "Disabled", "Deleted", "Extended", "Pending", "New", "Expired", "Terminated", "Transferred")]
        string BillingAccountStatus { get;  }
        /// <summary>Reason for the specified billing account status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Reason for the specified billing account status.",
        SerializedName = @"billingAccountStatusReasonCode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "UnusualActivity", "ManuallyTerminated", "Expired", "Transferred", "TerminateProcessing")]
        string BillingAccountStatusReasonCode { get;  }
        /// <summary>The tier of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The tier of the account.",
        SerializedName = @"billingAccountSubType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "Individual", "Professional", "Enterprise")]
        string BillingAccountSubType { get;  }
        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of customer.",
        SerializedName = @"billingAccountType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Enterprise", "Individual", "Partner", "Reseller", "ClassicPartner", "Internal", "Tenant", "Business")]
        string BillingAccountType { get;  }
        /// <summary>
        /// The billing currency for the subscription. Available for billing accounts with agreement type Enterprise Agreement
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The billing currency for the subscription. Available for billing accounts with agreement type Enterprise Agreement",
        SerializedName = @"billingCurrency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrency { get;  }
        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the billing profile.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The fully qualified ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>
        /// The payment method family of the primary payment method for the billing profile.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The payment method family of the primary payment method for the billing profile.",
        SerializedName = @"billingProfilePaymentMethodFamily",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "CreditCard", "Credits", "CheckWire", "EWallet", "TaskOrder", "DirectDebit")]
        string BillingProfilePaymentMethodFamily { get;  }
        /// <summary>The payment method type of the primary payment method for the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The payment method type of the primary payment method for the billing profile.",
        SerializedName = @"billingProfilePaymentMethodType",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfilePaymentMethodType { get;  }
        /// <summary>The billing profile spending limit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The billing profile spending limit.",
        SerializedName = @"billingProfileSpendingLimit",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Off", "On")]
        string BillingProfileSpendingLimit { get;  }
        /// <summary>The details of billing profile spending limit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The details of billing profile spending limit.",
        SerializedName = @"billingProfileSpendingLimitDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISpendingLimitDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISpendingLimitDetails> BillingProfileSpendingLimitDetail { get;  }
        /// <summary>The status of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the billing profile.",
        SerializedName = @"billingProfileStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "Disabled", "Warned", "Deleted", "UnderReview")]
        string BillingProfileStatus { get;  }
        /// <summary>Reason for the specified billing profile status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Reason for the specified billing profile status.",
        SerializedName = @"billingProfileStatusReasonCode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "PastDue", "UnusualActivity", "SpendingLimitReached", "SpendingLimitExpired")]
        string BillingProfileStatusReasonCode { get;  }
        /// <summary>The Azure AD tenant ID of the billing account for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Azure AD tenant ID of the billing account for the subscription.",
        SerializedName = @"billingTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingTenantId { get;  }
        /// <summary>
        /// The cost center applied to the subscription. Available for agreement type Microsoft Customer Agreement and Microsoft Partner
        /// Agreement. This property can be updated via patch.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cost center applied to the subscription. Available for agreement type Microsoft Customer Agreement and Microsoft Partner Agreement. This property can be updated via patch.",
        SerializedName = @"costCenter",
        PossibleTypes = new [] { typeof(string) })]
        string CostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the customer.",
        SerializedName = @"customerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The fully qualified ID that uniquely identifies a customer.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get;  }
        /// <summary>
        /// Identifies the status of an customer. This is an upcoming property that will be populated in the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Identifies the status of an customer. This is an upcoming property that will be populated in the future.",
        SerializedName = @"customerStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "Pending", "Disabled", "Warned", "Deleted", "UnderReview")]
        string CustomerStatus { get;  }
        /// <summary>The name of the department</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the department",
        SerializedName = @"departmentDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailDepartmentDisplayName { get; set; }
        /// <summary>The ID that uniquely identifies the department.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID that uniquely identifies the department.",
        SerializedName = @"departmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailDepartmentId { get; set; }
        /// <summary>The name of the enrollment account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the enrollment account.",
        SerializedName = @"enrollmentAccountDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailEnrollmentAccountDisplayName { get; set; }
        /// <summary>The ID that uniquely identifies an enrollment account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID that uniquely identifies an enrollment account.",
        SerializedName = @"enrollmentAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailEnrollmentAccountId { get; set; }
        /// <summary>The status of the enrollment account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The status of the enrollment account.",
        SerializedName = @"enrollmentAccountStatus",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailEnrollmentAccountStatus { get; set; }
        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the invoice section.",
        SerializedName = @"invoiceSectionDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The fully qualified ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionId",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionId { get;  }
        /// <summary>Identifies the status of an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Identifies the status of an invoice section.",
        SerializedName = @"invoiceSectionStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "Deleted", "Disabled", "UnderReview", "Warned", "Restricted")]
        string InvoiceSectionStatus { get;  }
        /// <summary>Reason for the specified invoice section status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Reason for the specified invoice section status.",
        SerializedName = @"invoiceSectionStatusReasonCode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "PastDue", "UnusualActivity", "SpendingLimitReached", "SpendingLimitExpired")]
        string InvoiceSectionStatusReasonCode { get;  }
        /// <summary>Indicates whether user is the account admin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates whether user is the account admin.",
        SerializedName = @"isAccountAdmin",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAccountAdmin { get;  }
        /// <summary>
        /// Specifies if the billing account for the subscription is transitioned from a Microsoft Online Service Program to a Microsoft
        /// Customer Agreement (MCA) account. Will be present and value will be true if its a transitioned billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies if the billing account for the subscription is transitioned from a Microsoft Online Service Program to a Microsoft Customer Agreement (MCA) account. Will be present and value will be true if its a transitioned billing account.",
        SerializedName = @"isTransitionedBillingAccount",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsTransitionedBillingAccount { get;  }
        /// <summary>The ID that uniquely identifies a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies a product.",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductId { get;  }
        /// <summary>The ID that uniquely identifies a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies a product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string ProductName { get;  }
        /// <summary>The sku description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The sku description.",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get;  }
        /// <summary>The ID that uniquely identifies a sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies a sku.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get;  }
        /// <summary>The subscription status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The subscription status.",
        SerializedName = @"subscriptionBillingStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Unknown", "Active", "Disabled", "Deleted", "Warned", "Expiring", "Expired", "AutoRenew", "Cancelled", "Suspended", "Failed")]
        string SubscriptionBillingStatus { get;  }
        /// <summary>The reason codes for the subscription status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The reason codes for the subscription status.",
        SerializedName = @"subscriptionBillingStatusDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SubscriptionBillingStatusDetail { get;  }
        /// <summary>The type of billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of billing subscription.",
        SerializedName = @"subscriptionBillingType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("None", "Benefit", "Free", "Paid", "PrePaid")]
        string SubscriptionBillingType { get;  }
        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address city.",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressCity { get; set; }
        /// <summary>Company name. Optional for MCA Individual (Pay-as-you-go).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Company name. Optional for MCA Individual (Pay-as-you-go).",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressCompanyName { get; set; }
        /// <summary>Country code uses ISO 3166-1 Alpha-2 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Country code uses ISO 3166-1 Alpha-2 format.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressCountry { get; set; }
        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address district.",
        SerializedName = @"district",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressDistrict { get; set; }
        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Email address.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressEmail { get; set; }
        /// <summary>First name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"First name. Optional for MCA Enterprise.",
        SerializedName = @"firstName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressFirstName { get; set; }
        /// <summary>Indicates if the address is incomplete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates if the address is incomplete.",
        SerializedName = @"isValidAddress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SubscriptionServiceUsageAddressIsValidAddress { get; set; }
        /// <summary>Last name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Last name. Optional for MCA Enterprise.",
        SerializedName = @"lastName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressLastName { get; set; }
        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address line 1.",
        SerializedName = @"addressLine1",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address line 2.",
        SerializedName = @"addressLine2",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address line 3.",
        SerializedName = @"addressLine3",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressLine3 { get; set; }
        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Middle name.",
        SerializedName = @"middleName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Phone number.",
        SerializedName = @"phoneNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Postal code.",
        SerializedName = @"postalCode",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressPostalCode { get; set; }
        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address region.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionServiceUsageAddressRegion { get; set; }
        /// <summary>The Azure workload type of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Azure workload type of the subscription.",
        SerializedName = @"subscriptionWorkloadType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("None", "Production", "DevTest", "Internal")]
        string SubscriptionWorkloadType { get;  }

    }
    /// A billing property.
    internal partial interface IBillingPropertyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal
    {
        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        string AccountAdminNotificationEmailAddress { get; set; }
        /// <summary>The type of agreement.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "MicrosoftCustomerAgreement", "EnterpriseAgreement", "MicrosoftOnlineServicesProgram", "MicrosoftPartnerAgreement")]
        string BillingAccountAgreementType { get; set; }
        /// <summary>The name of the billing account.</summary>
        string BillingAccountDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a billing account.</summary>
        string BillingAccountId { get; set; }
        /// <summary>
        /// The country of the individual or organization that is responsible for the billing account.
        /// </summary>
        string BillingAccountSoldToCountry { get; set; }
        /// <summary>The current status of the billing account.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "UnderReview", "Disabled", "Deleted", "Extended", "Pending", "New", "Expired", "Terminated", "Transferred")]
        string BillingAccountStatus { get; set; }
        /// <summary>Reason for the specified billing account status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "UnusualActivity", "ManuallyTerminated", "Expired", "Transferred", "TerminateProcessing")]
        string BillingAccountStatusReasonCode { get; set; }
        /// <summary>The tier of the account.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "Individual", "Professional", "Enterprise")]
        string BillingAccountSubType { get; set; }
        /// <summary>The type of customer.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Enterprise", "Individual", "Partner", "Reseller", "ClassicPartner", "Internal", "Tenant", "Business")]
        string BillingAccountType { get; set; }
        /// <summary>
        /// The billing currency for the subscription. Available for billing accounts with agreement type Enterprise Agreement
        /// </summary>
        string BillingCurrency { get; set; }
        /// <summary>The name of the billing profile.</summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        string BillingProfileId { get; set; }
        /// <summary>
        /// The payment method family of the primary payment method for the billing profile.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "CreditCard", "Credits", "CheckWire", "EWallet", "TaskOrder", "DirectDebit")]
        string BillingProfilePaymentMethodFamily { get; set; }
        /// <summary>The payment method type of the primary payment method for the billing profile.</summary>
        string BillingProfilePaymentMethodType { get; set; }
        /// <summary>The billing profile spending limit.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Off", "On")]
        string BillingProfileSpendingLimit { get; set; }
        /// <summary>The details of billing profile spending limit.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISpendingLimitDetails> BillingProfileSpendingLimitDetail { get; set; }
        /// <summary>The status of the billing profile.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "Disabled", "Warned", "Deleted", "UnderReview")]
        string BillingProfileStatus { get; set; }
        /// <summary>Reason for the specified billing profile status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "PastDue", "UnusualActivity", "SpendingLimitReached", "SpendingLimitExpired")]
        string BillingProfileStatusReasonCode { get; set; }
        /// <summary>The Azure AD tenant ID of the billing account for the subscription.</summary>
        string BillingTenantId { get; set; }
        /// <summary>
        /// The cost center applied to the subscription. Available for agreement type Microsoft Customer Agreement and Microsoft Partner
        /// Agreement. This property can be updated via patch.
        /// </summary>
        string CostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        string CustomerDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        string CustomerId { get; set; }
        /// <summary>
        /// Identifies the status of an customer. This is an upcoming property that will be populated in the future.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "Pending", "Disabled", "Warned", "Deleted", "UnderReview")]
        string CustomerStatus { get; set; }
        /// <summary>
        /// The enrollment details for the subscription. Available for billing accounts with agreement type Enterprise Agreement.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesEnrollmentDetails EnrollmentDetail { get; set; }
        /// <summary>The name of the department</summary>
        string EnrollmentDetailDepartmentDisplayName { get; set; }
        /// <summary>The ID that uniquely identifies the department.</summary>
        string EnrollmentDetailDepartmentId { get; set; }
        /// <summary>The name of the enrollment account.</summary>
        string EnrollmentDetailEnrollmentAccountDisplayName { get; set; }
        /// <summary>The ID that uniquely identifies an enrollment account.</summary>
        string EnrollmentDetailEnrollmentAccountId { get; set; }
        /// <summary>The status of the enrollment account.</summary>
        string EnrollmentDetailEnrollmentAccountStatus { get; set; }
        /// <summary>The name of the invoice section.</summary>
        string InvoiceSectionDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionId { get; set; }
        /// <summary>Identifies the status of an invoice section.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "Deleted", "Disabled", "UnderReview", "Warned", "Restricted")]
        string InvoiceSectionStatus { get; set; }
        /// <summary>Reason for the specified invoice section status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "PastDue", "UnusualActivity", "SpendingLimitReached", "SpendingLimitExpired")]
        string InvoiceSectionStatusReasonCode { get; set; }
        /// <summary>Indicates whether user is the account admin.</summary>
        bool? IsAccountAdmin { get; set; }
        /// <summary>
        /// Specifies if the billing account for the subscription is transitioned from a Microsoft Online Service Program to a Microsoft
        /// Customer Agreement (MCA) account. Will be present and value will be true if its a transitioned billing account.
        /// </summary>
        bool? IsTransitionedBillingAccount { get; set; }
        /// <summary>The ID that uniquely identifies a product.</summary>
        string ProductId { get; set; }
        /// <summary>The ID that uniquely identifies a product.</summary>
        string ProductName { get; set; }
        /// <summary>A billing property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyProperties Property { get; set; }
        /// <summary>The sku description.</summary>
        string SkuDescription { get; set; }
        /// <summary>The ID that uniquely identifies a sku.</summary>
        string SkuId { get; set; }
        /// <summary>The subscription status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Unknown", "Active", "Disabled", "Deleted", "Warned", "Expiring", "Expired", "AutoRenew", "Cancelled", "Suspended", "Failed")]
        string SubscriptionBillingStatus { get; set; }
        /// <summary>The reason codes for the subscription status.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SubscriptionBillingStatusDetail { get; set; }
        /// <summary>The type of billing subscription.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("None", "Benefit", "Free", "Paid", "PrePaid")]
        string SubscriptionBillingType { get; set; }
        /// <summary>
        /// The address of the individual or organization where service subscription is being used. Available for agreement type Microsoft
        /// Online Services Program. This property can be updated via patch.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingPropertyPropertiesSubscriptionServiceUsageAddress SubscriptionServiceUsageAddress { get; set; }
        /// <summary>Address city.</summary>
        string SubscriptionServiceUsageAddressCity { get; set; }
        /// <summary>Company name. Optional for MCA Individual (Pay-as-you-go).</summary>
        string SubscriptionServiceUsageAddressCompanyName { get; set; }
        /// <summary>Country code uses ISO 3166-1 Alpha-2 format.</summary>
        string SubscriptionServiceUsageAddressCountry { get; set; }
        /// <summary>Address district.</summary>
        string SubscriptionServiceUsageAddressDistrict { get; set; }
        /// <summary>Email address.</summary>
        string SubscriptionServiceUsageAddressEmail { get; set; }
        /// <summary>First name. Optional for MCA Enterprise.</summary>
        string SubscriptionServiceUsageAddressFirstName { get; set; }
        /// <summary>Indicates if the address is incomplete.</summary>
        bool? SubscriptionServiceUsageAddressIsValidAddress { get; set; }
        /// <summary>Last name. Optional for MCA Enterprise.</summary>
        string SubscriptionServiceUsageAddressLastName { get; set; }
        /// <summary>Address line 1.</summary>
        string SubscriptionServiceUsageAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        string SubscriptionServiceUsageAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        string SubscriptionServiceUsageAddressLine3 { get; set; }
        /// <summary>Middle name.</summary>
        string SubscriptionServiceUsageAddressMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        string SubscriptionServiceUsageAddressPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        string SubscriptionServiceUsageAddressPostalCode { get; set; }
        /// <summary>Address region.</summary>
        string SubscriptionServiceUsageAddressRegion { get; set; }
        /// <summary>The Azure workload type of the subscription.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("None", "Production", "DevTest", "Internal")]
        string SubscriptionWorkloadType { get; set; }

    }
}