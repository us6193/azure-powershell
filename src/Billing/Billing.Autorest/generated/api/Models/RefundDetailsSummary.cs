// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The details of refund request.</summary>
    public partial class RefundDetailsSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummary,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal
    {

        /// <summary>Backing field for <see cref="AmountRefunded" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRefunded _amountRefunded;

        /// <summary>The amount refunded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRefunded AmountRefunded { get => (this._amountRefunded = this._amountRefunded ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RefundDetailsSummaryAmountRefunded()); set => this._amountRefunded = value; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AmountRefundedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRefunded).Currency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? AmountRefundedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRefunded).Value; }

        /// <summary>Backing field for <see cref="AmountRequested" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRequested _amountRequested;

        /// <summary>The amount of refund requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRequested AmountRequested { get => (this._amountRequested = this._amountRequested ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RefundDetailsSummaryAmountRequested()); set => this._amountRequested = value; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AmountRequestedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRequested).Currency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? AmountRequestedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRequested).Value; }

        /// <summary>Backing field for <see cref="ApprovedOn" /> property.</summary>
        private global::System.DateTime? _approvedOn;

        /// <summary>Date when the refund was approved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? ApprovedOn { get => this._approvedOn; }

        /// <summary>Backing field for <see cref="CompletedOn" /> property.</summary>
        private global::System.DateTime? _completedOn;

        /// <summary>Date when the refund was completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? CompletedOn { get => this._completedOn; }

        /// <summary>Internal Acessors for AmountRefunded</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRefunded Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.AmountRefunded { get => (this._amountRefunded = this._amountRefunded ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RefundDetailsSummaryAmountRefunded()); set { {_amountRefunded = value;} } }

        /// <summary>Internal Acessors for AmountRefundedCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.AmountRefundedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRefunded).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRefunded).Currency = value; }

        /// <summary>Internal Acessors for AmountRefundedValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.AmountRefundedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRefunded).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRefunded).Value = value; }

        /// <summary>Internal Acessors for AmountRequested</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRequested Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.AmountRequested { get => (this._amountRequested = this._amountRequested ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RefundDetailsSummaryAmountRequested()); set { {_amountRequested = value;} } }

        /// <summary>Internal Acessors for AmountRequestedCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.AmountRequestedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRequested).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRequested).Currency = value; }

        /// <summary>Internal Acessors for AmountRequestedValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.AmountRequestedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRequested).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)AmountRequested).Value = value; }

        /// <summary>Internal Acessors for ApprovedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.ApprovedOn { get => this._approvedOn; set { {_approvedOn = value;} } }

        /// <summary>Internal Acessors for CompletedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.CompletedOn { get => this._completedOn; set { {_completedOn = value;} } }

        /// <summary>Internal Acessors for RebillInvoiceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.RebillInvoiceId { get => this._rebillInvoiceId; set { {_rebillInvoiceId = value;} } }

        /// <summary>Internal Acessors for RefundOperationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.RefundOperationId { get => this._refundOperationId; set { {_refundOperationId = value;} } }

        /// <summary>Internal Acessors for RefundReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.RefundReason { get => this._refundReason; set { {_refundReason = value;} } }

        /// <summary>Internal Acessors for RefundStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.RefundStatus { get => this._refundStatus; set { {_refundStatus = value;} } }

        /// <summary>Internal Acessors for RequestedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.RequestedOn { get => this._requestedOn; set { {_requestedOn = value;} } }

        /// <summary>Internal Acessors for TransactionCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryInternal.TransactionCount { get => this._transactionCount; set { {_transactionCount = value;} } }

        /// <summary>Backing field for <see cref="RebillInvoiceId" /> property.</summary>
        private string _rebillInvoiceId;

        /// <summary>The invoice ID of the rebill invoice for a refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string RebillInvoiceId { get => this._rebillInvoiceId; }

        /// <summary>Backing field for <see cref="RefundOperationId" /> property.</summary>
        private string _refundOperationId;

        /// <summary>The ID of refund operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string RefundOperationId { get => this._refundOperationId; }

        /// <summary>Backing field for <see cref="RefundReason" /> property.</summary>
        private string _refundReason;

        /// <summary>The reason for refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string RefundReason { get => this._refundReason; }

        /// <summary>Backing field for <see cref="RefundStatus" /> property.</summary>
        private string _refundStatus;

        /// <summary>The status of refund request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string RefundStatus { get => this._refundStatus; }

        /// <summary>Backing field for <see cref="RequestedOn" /> property.</summary>
        private global::System.DateTime? _requestedOn;

        /// <summary>Date when the refund was requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? RequestedOn { get => this._requestedOn; }

        /// <summary>Backing field for <see cref="TransactionCount" /> property.</summary>
        private int? _transactionCount;

        /// <summary>The number of transactions refunded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public int? TransactionCount { get => this._transactionCount; }

        /// <summary>Creates an new <see cref="RefundDetailsSummary" /> instance.</summary>
        public RefundDetailsSummary()
        {

        }
    }
    /// The details of refund request.
    public partial interface IRefundDetailsSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AmountRefundedCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? AmountRefundedValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AmountRequestedCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? AmountRequestedValue { get;  }
        /// <summary>Date when the refund was approved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Date when the refund was approved.",
        SerializedName = @"approvedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ApprovedOn { get;  }
        /// <summary>Date when the refund was completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Date when the refund was completed.",
        SerializedName = @"completedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CompletedOn { get;  }
        /// <summary>The invoice ID of the rebill invoice for a refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The invoice ID of the rebill invoice for a refund.",
        SerializedName = @"rebillInvoiceId",
        PossibleTypes = new [] { typeof(string) })]
        string RebillInvoiceId { get;  }
        /// <summary>The ID of refund operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID of refund operation.",
        SerializedName = @"refundOperationId",
        PossibleTypes = new [] { typeof(string) })]
        string RefundOperationId { get;  }
        /// <summary>The reason for refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The reason for refund.",
        SerializedName = @"refundReason",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "AccidentalConversion", "UnclearPricing", "AccidentalPurchase", "ForgotToCancel", "UnclearDocumentation")]
        string RefundReason { get;  }
        /// <summary>The status of refund request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of refund request.",
        SerializedName = @"refundStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Pending", "Approved", "Declined", "Cancelled", "Completed", "Expired")]
        string RefundStatus { get;  }
        /// <summary>Date when the refund was requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Date when the refund was requested.",
        SerializedName = @"requestedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RequestedOn { get;  }
        /// <summary>The number of transactions refunded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of transactions refunded.",
        SerializedName = @"transactionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TransactionCount { get;  }

    }
    /// The details of refund request.
    internal partial interface IRefundDetailsSummaryInternal

    {
        /// <summary>The amount refunded.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRefunded AmountRefunded { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string AmountRefundedCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? AmountRefundedValue { get; set; }
        /// <summary>The amount of refund requested.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRefundDetailsSummaryAmountRequested AmountRequested { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string AmountRequestedCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? AmountRequestedValue { get; set; }
        /// <summary>Date when the refund was approved.</summary>
        global::System.DateTime? ApprovedOn { get; set; }
        /// <summary>Date when the refund was completed.</summary>
        global::System.DateTime? CompletedOn { get; set; }
        /// <summary>The invoice ID of the rebill invoice for a refund.</summary>
        string RebillInvoiceId { get; set; }
        /// <summary>The ID of refund operation.</summary>
        string RefundOperationId { get; set; }
        /// <summary>The reason for refund.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "AccidentalConversion", "UnclearPricing", "AccidentalPurchase", "ForgotToCancel", "UnclearDocumentation")]
        string RefundReason { get; set; }
        /// <summary>The status of refund request.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Pending", "Approved", "Declined", "Cancelled", "Completed", "Expired")]
        string RefundStatus { get; set; }
        /// <summary>Date when the refund was requested.</summary>
        global::System.DateTime? RequestedOn { get; set; }
        /// <summary>The number of transactions refunded.</summary>
        int? TransactionCount { get; set; }

    }
}