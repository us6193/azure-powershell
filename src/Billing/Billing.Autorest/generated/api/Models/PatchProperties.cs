// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>Properties for reservation patch</summary>
    public partial class PatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal
    {

        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> AppliedScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScope = value ?? null /* arrayOf */; }

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).DisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).ManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).ManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).ResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).ResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).SubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopePropertiesInternal)AppliedScopeProperty).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="AppliedScopeProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopeProperties _appliedScopeProperty;

        /// <summary>
        /// Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId
        /// if AppliedScopeType is ManagementGroup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopeProperties AppliedScopeProperty { get => (this._appliedScopeProperty = this._appliedScopeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ReservationAppliedScopeProperties()); set => this._appliedScopeProperty = value; }

        /// <summary>Backing field for <see cref="AppliedScopeType" /> property.</summary>
        private string _appliedScopeType;

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string AppliedScopeType { get => this._appliedScopeType; set => this._appliedScopeType = value; }

        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).BillingPlan = value ?? null; }

        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).BillingScopeId; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="InstanceFlexibility" /> property.</summary>
        private string _instanceFlexibility;

        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string InstanceFlexibility { get => this._instanceFlexibility; set => this._instanceFlexibility = value; }

        /// <summary>Internal Acessors for AppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopeProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.AppliedScopeProperty { get => (this._appliedScopeProperty = this._appliedScopeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ReservationAppliedScopeProperties()); set { {_appliedScopeProperty = value;} } }

        /// <summary>Internal Acessors for BillingScopeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.BillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).BillingScopeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).BillingScopeId = value; }

        /// <summary>Internal Acessors for PurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPurchaseRequestProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.PurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchasePropertyProperties; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchasePropertyProperties = value; }

        /// <summary>Internal Acessors for PurchasePropertySku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISkuName Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.PurchasePropertySku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchasePropertySku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchasePropertySku = value; }

        /// <summary>Internal Acessors for RenewPropertiesPurchasePropertiesAppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopeProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.RenewPropertiesPurchasePropertiesAppliedScopeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopeProperty = value; }

        /// <summary>Internal Acessors for RenewProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.RenewProperty { get => (this._renewProperty = this._renewProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.PatchPropertiesRenewProperties()); set { {_renewProperty = value;} } }

        /// <summary>Internal Acessors for RenewPropertyPurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPurchaseRequest Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.RenewPropertyPurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchaseProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchaseProperty = value; }

        /// <summary>Internal Acessors for ReservedResourceProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPurchaseRequestPropertiesReservedResourceProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.ReservedResourceProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReservedResourceProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReservedResourceProperty = value; }

        /// <summary>Internal Acessors for ReservedResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.ReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReservedResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReservedResourceType = value; }

        /// <summary>Internal Acessors for Term</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesInternal.Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).Term = value; }

        /// <summary>The Azure region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PurchasePropertyLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchasePropertyLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).PurchasePropertyLocation = value ?? null; }

        /// <summary>
        /// Quantity of the skus that are part of the reservation. Must be greater than zero.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public int? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).Quantity = value ?? default(int); }

        /// <summary>Backing field for <see cref="Renew" /> property.</summary>
        private bool? _renew;

        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public bool? Renew { get => this._renew; set => this._renew = value; }

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyDisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertySubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertySubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopePropertyTenantId = value ?? null; }

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).AppliedScopeType = value ?? null; }

        /// <summary>Friendly name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).DisplayName = value ?? null; }

        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? RenewPropertiesPurchasePropertiesRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).Renew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).Renew = value ?? default(bool); }

        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? RenewPropertiesPurchasePropertiesReviewDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReviewDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReviewDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="RenewProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewProperties _renewProperty;

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewProperties RenewProperty { get => (this._renewProperty = this._renewProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.PatchPropertiesRenewProperties()); set => this._renewProperty = value; }

        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ReservedResourcePropertyInstanceFlexibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReservedResourcePropertyInstanceFlexibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReservedResourcePropertyInstanceFlexibility = value ?? null; }

        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).ReservedResourceType; }

        /// <summary>Backing field for <see cref="ReviewDateTime" /> property.</summary>
        private global::System.DateTime? _reviewDateTime;

        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? ReviewDateTime { get => this._reviewDateTime; set => this._reviewDateTime = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).SkuName = value ?? null; }

        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewPropertiesInternal)RenewProperty).Term; }

        /// <summary>Creates an new <see cref="PatchProperties" /> instance.</summary>
        public PatchProperties()
        {

        }
    }
    /// Properties for reservation patch
    public partial interface IPatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AppliedScope { get; set; }
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the management group where the benefit must be applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant ID where the reservation should apply benefit.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represent the billing plans.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Subscription that will be charged for purchasing reservation or savings plan",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get;  }
        /// <summary>Display name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name of the reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("On", "Off")]
        string InstanceFlexibility { get; set; }
        /// <summary>The Azure region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The Azure region where the reserved resource lives.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasePropertyLocation { get; set; }
        /// <summary>
        /// Quantity of the skus that are part of the reservation. Must be greater than zero.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Quantity of the skus that are part of the reservation. Must be greater than zero.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Setting this to true will automatically purchase a new benefit on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get; set; }
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the management group where the benefit must be applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant ID where the reservation should apply benefit.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>Friendly name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Friendly name of the reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesDisplayName { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Setting this to true will automatically purchase a new benefit on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }
        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the Azure hybrid benefit needs to be reviewed.",
        SerializedName = @"reviewDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RenewPropertiesPurchasePropertiesReviewDateTime { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("On", "Off")]
        string ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The reserved source type of the reservation, e.g. virtual machine.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ReservedResourceType { get;  }
        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the Azure hybrid benefit needs to be reviewed.",
        SerializedName = @"reviewDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewDateTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The term of the reservation, e.g. P1Y",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get;  }

    }
    /// Properties for reservation patch
    internal partial interface IPatchPropertiesInternal

    {
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.
        /// </summary>
        System.Collections.Generic.List<string> AppliedScope { get; set; }
        /// <summary>Display name</summary>
        string AppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        string AppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        string AppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        string AppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        string AppliedScopePropertiesTenantId { get; set; }
        /// <summary>
        /// Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId
        /// if AppliedScopeType is ManagementGroup
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopeProperties AppliedScopeProperty { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        string BillingScopeId { get; set; }
        /// <summary>Display name of the reservation</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("On", "Off")]
        string InstanceFlexibility { get; set; }
        /// <summary>Properties of reservation purchase request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPurchaseRequestProperties PurchaseProperty { get; set; }
        /// <summary>The Azure region where the reserved resource lives.</summary>
        string PurchasePropertyLocation { get; set; }
        /// <summary>The name of sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISkuName PurchasePropertySku { get; set; }
        /// <summary>
        /// Quantity of the skus that are part of the reservation. Must be greater than zero.
        /// </summary>
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        bool? Renew { get; set; }
        /// <summary>Display name</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesTenantId { get; set; }
        /// <summary>
        /// Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId
        /// if AppliedScopeType is ManagementGroup
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationAppliedScopeProperties RenewPropertiesPurchasePropertiesAppliedScopeProperty { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>Friendly name of the reservation</summary>
        string RenewPropertiesPurchasePropertiesDisplayName { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }
        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        global::System.DateTime? RenewPropertiesPurchasePropertiesReviewDateTime { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPatchPropertiesRenewProperties RenewProperty { get; set; }
        /// <summary>The request for reservation purchase</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPurchaseRequest RenewPropertyPurchaseProperty { get; set; }
        /// <summary>
        /// Properties specific to each reserved resource type. Not required if not applicable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPurchaseRequestPropertiesReservedResourceProperties ReservedResourceProperty { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("On", "Off")]
        string ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        string ReservedResourceType { get; set; }
        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        global::System.DateTime? ReviewDateTime { get; set; }

        string SkuName { get; set; }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        string Term { get; set; }

    }
}