// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>Details of a reservation order being returned.</summary>
    public partial class ReservationOrder :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrder,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ProxyResource();

        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? BenefitStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BenefitStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BenefitStartTime = value ?? default(global::System.DateTime); }

        /// <summary>Billing account Id associated to this reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BillingAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BillingAccountId = value ?? null; }

        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BillingPlan = value ?? null; }

        /// <summary>Billing profile Id associated to this reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).BillingProfileId = value ?? null; }

        /// <summary>This is the DateTime when the reservation order was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).CreatedDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).CreatedDateTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Fully-qualified identifier of the customerId where the benefit is applied. Present only for Enterprise Agreement PartnerLed
        /// customers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).CustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).CustomerId = value ?? null; }

        /// <summary>Friendly name for user to easily identified the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).DisplayName = value ?? null; }

        /// <summary>Enrollment id of the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).EnrollmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).EnrollmentId = value ?? null; }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private int? _etag;

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public int? Etag { get => this._etag; set => this._etag = value; }

        /// <summary>This is the date when the reservation order will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpiryDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExpiryDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExpiryDate = value ?? default(global::System.DateTime); }

        /// <summary>This is the date-time when the reservation order will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpiryDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExpiryDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExpiryDateTime = value ?? default(global::System.DateTime); }

        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExtendedStatusInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfoMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfoMessage = value ?? null; }

        /// <summary>The status of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExtendedStatusInfoStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfoStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfoStatusCode = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>Internal Acessors for ExtendedStatusInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationExtendedStatusInfo Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal.ExtendedStatusInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfo = value; }

        /// <summary>Internal Acessors for ExtendedStatusInfoProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusDefinitionProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal.ExtendedStatusInfoProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfoProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ExtendedStatusInfoProperty = value; }

        /// <summary>Internal Acessors for PlanInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderBillingPlanInformation Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal.PlanInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformation = value; }

        /// <summary>Internal Acessors for PlanInformationPricingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal.PlanInformationPricingCurrencyTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationPricingCurrencyTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationPricingCurrencyTotal = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderProperty Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ReservationOrderProperty()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Term</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderInternal.Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).Term = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Total original quantity of the skus purchased in the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public int? OriginalQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).OriginalQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).OriginalQuantity = value ?? default(int); }

        /// <summary>
        /// For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PlanInformationNextPaymentDueDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationNextPaymentDueDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationNextPaymentDueDate = value ?? default(global::System.DateTime); }

        /// <summary>Date when the billing plan has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PlanInformationStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationStartDate = value ?? default(global::System.DateTime); }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPaymentDetail> PlanInformationTransaction { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationTransaction; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PlanInformationTransaction = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public double? PricingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PricingCurrencyTotalAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PricingCurrencyTotalAmount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PricingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PricingCurrencyTotalCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).PricingCurrencyTotalCurrencyCode = value ?? null; }

        /// <summary>Represents UPN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ProductCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ProductCode = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderProperty _property;

        /// <summary>The properties associated to this reservation order</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderProperty Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ReservationOrderProperty()); set => this._property = value; }

        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ProvisioningState; }

        /// <summary>
        /// This is the DateTime when the reservation order was initially requested for purchase.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? RequestDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).RequestDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).RequestDateTime = value ?? default(global::System.DateTime); }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservation> Reservation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).Reservation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).Reservation = value ?? null /* arrayOf */; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReviewDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ReviewDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).ReviewDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).SubscriptionId = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITags _tag;

        /// <summary>Tags for this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Tags()); set => this._tag = value; }

        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderPropertyInternal)Property).Term; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="ReservationOrder" /> instance.</summary>
        public ReservationOrder()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// Details of a reservation order being returned.
    public partial interface IReservationOrder :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResource
    {
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the DateTime when the reservation benefit started.",
        SerializedName = @"benefitStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BenefitStartTime { get; set; }
        /// <summary>Billing account Id associated to this reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Billing account Id associated to this reservation order.",
        SerializedName = @"billingAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountId { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represent the billing plans.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Billing profile Id associated to this reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Billing profile Id associated to this reservation order.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get; set; }
        /// <summary>This is the DateTime when the reservation order was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the DateTime when the reservation order was created.",
        SerializedName = @"createdDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDateTime { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the customerId where the benefit is applied. Present only for Enterprise Agreement PartnerLed
        /// customers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the customerId where the benefit is applied. Present only for Enterprise Agreement PartnerLed customers.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get; set; }
        /// <summary>Friendly name for user to easily identified the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Friendly name for user to easily identified the reservation order.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Enrollment id of the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enrollment id of the reservation order.",
        SerializedName = @"enrollmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(int) })]
        int? Etag { get; set; }
        /// <summary>This is the date when the reservation order will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date when the reservation order will expire.",
        SerializedName = @"expiryDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryDate { get; set; }
        /// <summary>This is the date-time when the reservation order will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the reservation order will expire.",
        SerializedName = @"expiryDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryDateTime { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The message giving detailed information about the status code.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedStatusInfoMessage { get; set; }
        /// <summary>The status of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The status of the reservation.",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("None", "Pending", "Processing", "Active", "PurchaseError", "PaymentInstrumentError", "Split", "Merged", "Expired", "Succeeded", "CapacityError", "CapacityRestricted", "Exchanged", "UnknownError", "RiskCheckFailed", "CreditLineCheckFailed", "Warning", "NoBenefitDueToSubscriptionTransfer", "NoBenefitDueToSubscriptionDeletion", "NoBenefit")]
        string ExtendedStatusInfoStatusCode { get; set; }
        /// <summary>Total original quantity of the skus purchased in the reservation order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Total original quantity of the skus purchased in the reservation order.",
        SerializedName = @"originalQuantity",
        PossibleTypes = new [] { typeof(int) })]
        int? OriginalQuantity { get; set; }
        /// <summary>
        /// For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.",
        SerializedName = @"nextPaymentDueDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PlanInformationNextPaymentDueDate { get; set; }
        /// <summary>Date when the billing plan has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Date when the billing plan has started.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PlanInformationStartDate { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"transactions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPaymentDetail) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPaymentDetail> PlanInformationTransaction { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Represents UPN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represents UPN",
        SerializedName = @"productCode",
        PossibleTypes = new [] { typeof(string) })]
        string ProductCode { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the reservation, e.g. Succeeded",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// This is the DateTime when the reservation order was initially requested for purchase.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the DateTime when the reservation order was initially requested for purchase.",
        SerializedName = @"requestDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RequestDateTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"reservations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservation) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservation> Reservation { get; set; }
        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the Azure Hybrid Benefit needs to be reviewed.",
        SerializedName = @"reviewDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>Subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Tags for this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tags for this reservation",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITags Tag { get; set; }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The term of the reservation, e.g. P1Y",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get;  }

    }
    /// Details of a reservation order being returned.
    internal partial interface IReservationOrderInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceInternal
    {
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        global::System.DateTime? BenefitStartTime { get; set; }
        /// <summary>Billing account Id associated to this reservation order.</summary>
        string BillingAccountId { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Billing profile Id associated to this reservation order.</summary>
        string BillingProfileId { get; set; }
        /// <summary>This is the DateTime when the reservation order was created.</summary>
        global::System.DateTime? CreatedDateTime { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the customerId where the benefit is applied. Present only for Enterprise Agreement PartnerLed
        /// customers.
        /// </summary>
        string CustomerId { get; set; }
        /// <summary>Friendly name for user to easily identified the reservation order.</summary>
        string DisplayName { get; set; }
        /// <summary>Enrollment id of the reservation order.</summary>
        string EnrollmentId { get; set; }

        int? Etag { get; set; }
        /// <summary>This is the date when the reservation order will expire.</summary>
        global::System.DateTime? ExpiryDate { get; set; }
        /// <summary>This is the date-time when the reservation order will expire.</summary>
        global::System.DateTime? ExpiryDateTime { get; set; }
        /// <summary>Extended status information for the reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationExtendedStatusInfo ExtendedStatusInfo { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        string ExtendedStatusInfoMessage { get; set; }
        /// <summary>Properties for extended status information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusDefinitionProperties ExtendedStatusInfoProperty { get; set; }
        /// <summary>The status of the reservation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("None", "Pending", "Processing", "Active", "PurchaseError", "PaymentInstrumentError", "Split", "Merged", "Expired", "Succeeded", "CapacityError", "CapacityRestricted", "Exchanged", "UnknownError", "RiskCheckFailed", "CreditLineCheckFailed", "Warning", "NoBenefitDueToSubscriptionTransfer", "NoBenefitDueToSubscriptionDeletion", "NoBenefit")]
        string ExtendedStatusInfoStatusCode { get; set; }
        /// <summary>Total original quantity of the skus purchased in the reservation order.</summary>
        int? OriginalQuantity { get; set; }
        /// <summary>Information describing the type of billing plan for this reservation order.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderBillingPlanInformation PlanInformation { get; set; }
        /// <summary>
        /// For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
        /// </summary>
        global::System.DateTime? PlanInformationNextPaymentDueDate { get; set; }
        /// <summary>Amount of money to be paid for the Order. Tax is not included.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPrice PlanInformationPricingCurrencyTotal { get; set; }
        /// <summary>Date when the billing plan has started.</summary>
        global::System.DateTime? PlanInformationStartDate { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationPaymentDetail> PlanInformationTransaction { get; set; }

        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Represents UPN</summary>
        string ProductCode { get; set; }
        /// <summary>The properties associated to this reservation order</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservationOrderProperty Property { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// This is the DateTime when the reservation order was initially requested for purchase.
        /// </summary>
        global::System.DateTime? RequestDateTime { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReservation> Reservation { get; set; }
        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>Subscription Id</summary>
        string SubscriptionId { get; set; }
        /// <summary>Tags for this reservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITags Tag { get; set; }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        string Term { get; set; }

    }
}