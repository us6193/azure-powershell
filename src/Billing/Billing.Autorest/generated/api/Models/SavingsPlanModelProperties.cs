// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>Savings plan properties</summary>
    public partial class SavingsPlanModelProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal
    {

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public double? Amount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)Commitment).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)Commitment).Amount = value ?? default(double); }

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).DisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).SubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the savings plan where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertiesTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="AppliedScopeProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopeProperties _appliedScopeProperty;

        /// <summary>Properties specific to applied scope type. Not required if not applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopeProperties AppliedScopeProperty { get => (this._appliedScopeProperty = this._appliedScopeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.AppliedScopeProperties()); set => this._appliedScopeProperty = value; }

        /// <summary>Backing field for <see cref="AppliedScopeType" /> property.</summary>
        private string _appliedScopeType;

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string AppliedScopeType { get => this._appliedScopeType; set => this._appliedScopeType = value; }

        /// <summary>Backing field for <see cref="BenefitStartTime" /> property.</summary>
        private global::System.DateTime? _benefitStartTime;

        /// <summary>This is the DateTime when the savings plan benefit starts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? BenefitStartTime { get => this._benefitStartTime; }

        /// <summary>Backing field for <see cref="BillingAccountId" /> property.</summary>
        private string _billingAccountId;

        /// <summary>
        /// Fully-qualified identifier of the billing account where the savings plan is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingAccountId { get => this._billingAccountId; }

        /// <summary>Backing field for <see cref="BillingPlan" /> property.</summary>
        private string _billingPlan;

        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly purchases.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingPlan { get => this._billingPlan; set => this._billingPlan = value; }

        /// <summary>Backing field for <see cref="BillingProfileId" /> property.</summary>
        private string _billingProfileId;

        /// <summary>
        /// Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led
        /// customers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingProfileId { get => this._billingProfileId; }

        /// <summary>Backing field for <see cref="BillingScopeId" /> property.</summary>
        private string _billingScopeId;

        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingScopeId { get => this._billingScopeId; set => this._billingScopeId = value; }

        /// <summary>Backing field for <see cref="Commitment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitment _commitment;

        /// <summary>Commitment towards the benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitment Commitment { get => (this._commitment = this._commitment ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Commitment()); set => this._commitment = value; }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)Commitment).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPriceInternal)Commitment).CurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="CustomerId" /> property.</summary>
        private string _customerId;

        /// <summary>
        /// Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string CustomerId { get => this._customerId; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="DisplayProvisioningState" /> property.</summary>
        private string _displayProvisioningState;

        /// <summary>The provisioning state of the savings plan for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string DisplayProvisioningState { get => this._displayProvisioningState; }

        /// <summary>Backing field for <see cref="EffectiveDateTime" /> property.</summary>
        private global::System.DateTime? _effectiveDateTime;

        /// <summary>DateTime of the savings plan starting when this version is effective from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? EffectiveDateTime { get => this._effectiveDateTime; }

        /// <summary>Backing field for <see cref="ExpiryDateTime" /> property.</summary>
        private global::System.DateTime? _expiryDateTime;

        /// <summary>This is the date-time when the savings plan will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpiryDateTime { get => this._expiryDateTime; }

        /// <summary>Backing field for <see cref="ExtendedStatusInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo _extendedStatusInfo;

        /// <summary>Extended status information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo ExtendedStatusInfo { get => (this._extendedStatusInfo = this._extendedStatusInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ExtendedStatusInfo()); }

        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExtendedStatusInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Message = value ?? null; }

        /// <summary>Status code providing additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExtendedStatusInfoStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).StatusCode = value ?? null; }

        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Grain { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitmentInternal)Commitment).Grain; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitmentInternal)Commitment).Grain = value ?? null; }

        /// <summary>Internal Acessors for AppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopeProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.AppliedScopeProperty { get => (this._appliedScopeProperty = this._appliedScopeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.AppliedScopeProperties()); set { {_appliedScopeProperty = value;} } }

        /// <summary>Internal Acessors for BenefitStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.BenefitStartTime { get => this._benefitStartTime; set { {_benefitStartTime = value;} } }

        /// <summary>Internal Acessors for BillingAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.BillingAccountId { get => this._billingAccountId; set { {_billingAccountId = value;} } }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.BillingProfileId { get => this._billingProfileId; set { {_billingProfileId = value;} } }

        /// <summary>Internal Acessors for Commitment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitment Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.Commitment { get => (this._commitment = this._commitment ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Commitment()); set { {_commitment = value;} } }

        /// <summary>Internal Acessors for CustomerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.CustomerId { get => this._customerId; set { {_customerId = value;} } }

        /// <summary>Internal Acessors for DisplayProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.DisplayProvisioningState { get => this._displayProvisioningState; set { {_displayProvisioningState = value;} } }

        /// <summary>Internal Acessors for EffectiveDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.EffectiveDateTime { get => this._effectiveDateTime; set { {_effectiveDateTime = value;} } }

        /// <summary>Internal Acessors for ExpiryDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.ExpiryDateTime { get => this._expiryDateTime; set { {_expiryDateTime = value;} } }

        /// <summary>Internal Acessors for ExtendedStatusInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.ExtendedStatusInfo { get => (this._extendedStatusInfo = this._extendedStatusInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ExtendedStatusInfo()); set { {_extendedStatusInfo = value;} } }

        /// <summary>Internal Acessors for ExtendedStatusInfoProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.ExtendedStatusInfoProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).Property = value; }

        /// <summary>Internal Acessors for PurchaseDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.PurchaseDateTime { get => this._purchaseDateTime; set { {_purchaseDateTime = value;} } }

        /// <summary>Internal Acessors for PurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPurchaseRequestProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.PurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).PurchasePropertyProperties; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).PurchasePropertyProperties = value; }

        /// <summary>Internal Acessors for PurchasePropertySku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISku Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.PurchasePropertySku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).PurchasePropertySku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).PurchasePropertySku = value; }

        /// <summary>Internal Acessors for RenewPropertiesPurchasePropertiesAppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopeProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.RenewPropertiesPurchasePropertiesAppliedScopeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopeProperty = value; }

        /// <summary>Internal Acessors for RenewPropertiesPurchasePropertiesCommitment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitment Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.RenewPropertiesPurchasePropertiesCommitment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).Commitment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).Commitment = value; }

        /// <summary>Internal Acessors for RenewProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.RenewProperty { get => (this._renewProperty = this._renewProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RenewProperties()); set { {_renewProperty = value;} } }

        /// <summary>Internal Acessors for RenewPropertyPurchaseProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPurchaseRequest Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.RenewPropertyPurchaseProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).PurchaseProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).PurchaseProperty = value; }

        /// <summary>Internal Acessors for UserFriendlyAppliedScopeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.UserFriendlyAppliedScopeType { get => this._userFriendlyAppliedScopeType; set { {_userFriendlyAppliedScopeType = value;} } }

        /// <summary>Internal Acessors for Utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilization Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.Utilization { get => (this._utilization = this._utilization ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Utilization()); set { {_utilization = value;} } }

        /// <summary>Internal Acessors for UtilizationTrend</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelPropertiesInternal.UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationInternal)Utilization).Trend; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationInternal)Utilization).Trend = value; }

        /// <summary>Backing field for <see cref="ProductCode" /> property.</summary>
        private string _productCode;

        /// <summary>Represents UPN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductCode { get => this._productCode; set => this._productCode = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="PurchaseDateTime" /> property.</summary>
        private global::System.DateTime? _purchaseDateTime;

        /// <summary>Date time when the savings plan was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? PurchaseDateTime { get => this._purchaseDateTime; }

        /// <summary>Backing field for <see cref="Renew" /> property.</summary>
        private bool? _renew;

        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public bool? Renew { get => this._renew; set => this._renew = value; }

        /// <summary>Backing field for <see cref="RenewDestination" /> property.</summary>
        private string _renewDestination;

        /// <summary>SavingsPlan Id of the SavingsPlan which is purchased because of renew.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string RenewDestination { get => this._renewDestination; set => this._renewDestination = value; }

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyDisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertySubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertySubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the savings plan where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopePropertiesTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopePropertyTenantId = value ?? null; }

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).AppliedScopeType = value ?? null; }

        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly purchases.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesBillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).BillingPlan = value ?? null; }

        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesBillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).BillingScopeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).BillingScopeId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public double? RenewPropertiesPurchasePropertiesCommitmentAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).CommitmentAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).CommitmentAmount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesCommitmentCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).CommitmentCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).CommitmentCurrencyCode = value ?? null; }

        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesCommitmentGrain { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).CommitmentGrain; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).CommitmentGrain = value ?? null; }

        /// <summary>Friendly name of the savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).DisplayName = value ?? null; }

        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? RenewPropertiesPurchasePropertiesRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).Renew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).Renew = value ?? default(bool); }

        /// <summary>Represents the Savings plan term in ISO 8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewPropertiesPurchasePropertiesTerm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).Term = value ?? null; }

        /// <summary>Backing field for <see cref="RenewProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewProperties _renewProperty;

        /// <summary>Properties specific to renew.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewProperties RenewProperty { get => (this._renewProperty = this._renewProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RenewProperties()); set => this._renewProperty = value; }

        /// <summary>Backing field for <see cref="RenewSource" /> property.</summary>
        private string _renewSource;

        /// <summary>SavingsPlan Id of the SavingsPlan from which this SavingsPlan is renewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string RenewSource { get => this._renewSource; set => this._renewSource = value; }

        /// <summary>Name of the SKU to be applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewPropertiesInternal)RenewProperty).SkuName = value ?? null; }

        /// <summary>The subscription that has failed credit line check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoInternal)ExtendedStatusInfo).SubscriptionId = value ?? null; }

        /// <summary>Backing field for <see cref="Term" /> property.</summary>
        private string _term;

        /// <summary>Represents the Savings plan term in ISO 8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Term { get => this._term; set => this._term = value; }

        /// <summary>Backing field for <see cref="UserFriendlyAppliedScopeType" /> property.</summary>
        private string _userFriendlyAppliedScopeType;

        /// <summary>The applied scope type of the savings plan for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string UserFriendlyAppliedScopeType { get => this._userFriendlyAppliedScopeType; }

        /// <summary>Backing field for <see cref="Utilization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilization _utilization;

        /// <summary>Savings plan utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilization Utilization { get => (this._utilization = this._utilization ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Utilization()); }

        /// <summary>The array of aggregates of a savings plan's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationAggregates> UtilizationAggregate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationInternal)Utilization).Aggregate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationInternal)Utilization).Aggregate = value ?? null /* arrayOf */; }

        /// <summary>The trend for a savings plan's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationInternal)Utilization).Trend; }

        /// <summary>Creates an new <see cref="SavingsPlanModelProperties" /> instance.</summary>
        public SavingsPlanModelProperties()
        {

        }
    }
    /// Savings plan properties
    public partial interface ISavingsPlanModelProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? Amount { get; set; }
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the management group where the benefit is applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the resource group where the benefit is applied.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the subscription where the benefit is applied.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant ID where the savings plan where the benefit is applied.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertiesTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>This is the DateTime when the savings plan benefit starts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"This is the DateTime when the savings plan benefit starts.",
        SerializedName = @"benefitStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BenefitStartTime { get;  }
        /// <summary>
        /// Fully-qualified identifier of the billing account where the savings plan is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Fully-qualified identifier of the billing account where the savings plan is applied.",
        SerializedName = @"billingAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountId { get;  }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly purchases.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represents the billing plan in ISO 8601 format. Required only for monthly purchases.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1M")]
        string BillingPlan { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led
        /// customers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led customers.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription that will be charged for purchasing SavingsPlan",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string CurrencyCode { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get;  }
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the savings plan for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the savings plan for display, e.g. Succeeded",
        SerializedName = @"displayProvisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayProvisioningState { get;  }
        /// <summary>DateTime of the savings plan starting when this version is effective from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"DateTime of the savings plan starting when this version is effective from.",
        SerializedName = @"effectiveDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EffectiveDateTime { get;  }
        /// <summary>This is the date-time when the savings plan will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"This is the date-time when the savings plan will expire.",
        SerializedName = @"expiryDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryDateTime { get;  }
        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The message giving detailed information about the status code.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedStatusInfoMessage { get;  }
        /// <summary>Status code providing additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Status code providing additional information.",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedStatusInfoStatusCode { get;  }
        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Commitment grain.",
        SerializedName = @"grain",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Hourly")]
        string Grain { get; set; }
        /// <summary>Represents UPN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represents UPN",
        SerializedName = @"productCode",
        PossibleTypes = new [] { typeof(string) })]
        string ProductCode { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The provisioning state of the resource during a long-running operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get; set; }
        /// <summary>Date time when the savings plan was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Date time when the savings plan was purchased.",
        SerializedName = @"purchaseDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDateTime { get;  }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Setting this to true will automatically purchase a new benefit on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get; set; }
        /// <summary>SavingsPlan Id of the SavingsPlan which is purchased because of renew.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SavingsPlan Id of the SavingsPlan which is purchased because of renew.",
        SerializedName = @"renewDestination",
        PossibleTypes = new [] { typeof(string) })]
        string RenewDestination { get; set; }
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit is applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the management group where the benefit is applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the resource group where the benefit is applied.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the subscription where the benefit is applied.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan where the benefit is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant ID where the savings plan where the benefit is applied.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly purchases.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represents the billing plan in ISO 8601 format. Required only for monthly purchases.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1M")]
        string RenewPropertiesPurchasePropertiesBillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription that will be charged for purchasing SavingsPlan",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesBillingScopeId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? RenewPropertiesPurchasePropertiesCommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesCommitmentCurrencyCode { get; set; }
        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Commitment grain.",
        SerializedName = @"grain",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Hourly")]
        string RenewPropertiesPurchasePropertiesCommitmentGrain { get; set; }
        /// <summary>Friendly name of the savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Friendly name of the savings plan",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string RenewPropertiesPurchasePropertiesDisplayName { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Setting this to true will automatically purchase a new benefit on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }
        /// <summary>Represents the Savings plan term in ISO 8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represents the Savings plan term in ISO 8601 format.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string RenewPropertiesPurchasePropertiesTerm { get; set; }
        /// <summary>SavingsPlan Id of the SavingsPlan from which this SavingsPlan is renewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SavingsPlan Id of the SavingsPlan from which this SavingsPlan is renewed.",
        SerializedName = @"renewSource",
        PossibleTypes = new [] { typeof(string) })]
        string RenewSource { get; set; }
        /// <summary>Name of the SKU to be applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the SKU to be applied",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>The subscription that has failed credit line check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The subscription that has failed credit line check.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>Represents the Savings plan term in ISO 8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represents the Savings plan term in ISO 8601 format.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string Term { get; set; }
        /// <summary>The applied scope type of the savings plan for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The applied scope type of the savings plan for display, e.g. Shared",
        SerializedName = @"userFriendlyAppliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyAppliedScopeType { get;  }
        /// <summary>The array of aggregates of a savings plan's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The array of aggregates of a savings plan's utilization",
        SerializedName = @"aggregates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationAggregates) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationAggregates> UtilizationAggregate { get;  }
        /// <summary>The trend for a savings plan's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The trend for a savings plan's utilization",
        SerializedName = @"trend",
        PossibleTypes = new [] { typeof(string) })]
        string UtilizationTrend { get;  }

    }
    /// Savings plan properties
    internal partial interface ISavingsPlanModelPropertiesInternal

    {
        double? Amount { get; set; }
        /// <summary>Display name</summary>
        string AppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit is applied.
        /// </summary>
        string AppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group where the benefit is applied.</summary>
        string AppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription where the benefit is applied.</summary>
        string AppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan where the benefit is applied.</summary>
        string AppliedScopePropertiesTenantId { get; set; }
        /// <summary>Properties specific to applied scope type. Not required if not applicable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopeProperties AppliedScopeProperty { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>This is the DateTime when the savings plan benefit starts.</summary>
        global::System.DateTime? BenefitStartTime { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the billing account where the savings plan is applied.
        /// </summary>
        string BillingAccountId { get; set; }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly purchases.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1M")]
        string BillingPlan { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the billing profile where the savings plan is applied. Present only for Field-led or Customer-led
        /// customers.
        /// </summary>
        string BillingProfileId { get; set; }
        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        string BillingScopeId { get; set; }
        /// <summary>Commitment towards the benefit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitment Commitment { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string CurrencyCode { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the customer where the savings plan is applied. Present only for Partner-led customers.
        /// </summary>
        string CustomerId { get; set; }
        /// <summary>Display name</summary>
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the savings plan for display, e.g. Succeeded</summary>
        string DisplayProvisioningState { get; set; }
        /// <summary>DateTime of the savings plan starting when this version is effective from.</summary>
        global::System.DateTime? EffectiveDateTime { get; set; }
        /// <summary>This is the date-time when the savings plan will expire.</summary>
        global::System.DateTime? ExpiryDateTime { get; set; }
        /// <summary>Extended status information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfo ExtendedStatusInfo { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        string ExtendedStatusInfoMessage { get; set; }
        /// <summary>Properties specific to credit line check failure</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IExtendedStatusInfoProperties ExtendedStatusInfoProperty { get; set; }
        /// <summary>Status code providing additional information.</summary>
        string ExtendedStatusInfoStatusCode { get; set; }
        /// <summary>Commitment grain.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Hourly")]
        string Grain { get; set; }
        /// <summary>Represents UPN</summary>
        string ProductCode { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get; set; }
        /// <summary>Date time when the savings plan was purchased.</summary>
        global::System.DateTime? PurchaseDateTime { get; set; }
        /// <summary>Purchase request properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPurchaseRequestProperties PurchaseProperty { get; set; }
        /// <summary>The SKU to be applied for this resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISku PurchasePropertySku { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        bool? Renew { get; set; }
        /// <summary>SavingsPlan Id of the SavingsPlan which is purchased because of renew.</summary>
        string RenewDestination { get; set; }
        /// <summary>Display name</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit is applied.
        /// </summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group where the benefit is applied.</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription where the benefit is applied.</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesSubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan where the benefit is applied.</summary>
        string RenewPropertiesPurchasePropertiesAppliedScopePropertiesTenantId { get; set; }
        /// <summary>Properties specific to applied scope type. Not required if not applicable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAppliedScopeProperties RenewPropertiesPurchasePropertiesAppliedScopeProperty { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string RenewPropertiesPurchasePropertiesAppliedScopeType { get; set; }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly purchases.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1M")]
        string RenewPropertiesPurchasePropertiesBillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        string RenewPropertiesPurchasePropertiesBillingScopeId { get; set; }
        /// <summary>Commitment towards the benefit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ICommitment RenewPropertiesPurchasePropertiesCommitment { get; set; }

        double? RenewPropertiesPurchasePropertiesCommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string RenewPropertiesPurchasePropertiesCommitmentCurrencyCode { get; set; }
        /// <summary>Commitment grain.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Hourly")]
        string RenewPropertiesPurchasePropertiesCommitmentGrain { get; set; }
        /// <summary>Friendly name of the savings plan</summary>
        string RenewPropertiesPurchasePropertiesDisplayName { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new benefit on the expiration date time.
        /// </summary>
        bool? RenewPropertiesPurchasePropertiesRenew { get; set; }
        /// <summary>Represents the Savings plan term in ISO 8601 format.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string RenewPropertiesPurchasePropertiesTerm { get; set; }
        /// <summary>Properties specific to renew.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewProperties RenewProperty { get; set; }
        /// <summary>Purchase request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPurchaseRequest RenewPropertyPurchaseProperty { get; set; }
        /// <summary>SavingsPlan Id of the SavingsPlan from which this SavingsPlan is renewed.</summary>
        string RenewSource { get; set; }
        /// <summary>Name of the SKU to be applied</summary>
        string SkuName { get; set; }
        /// <summary>The subscription that has failed credit line check.</summary>
        string SubscriptionId { get; set; }
        /// <summary>Represents the Savings plan term in ISO 8601 format.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string Term { get; set; }
        /// <summary>The applied scope type of the savings plan for display, e.g. Shared</summary>
        string UserFriendlyAppliedScopeType { get; set; }
        /// <summary>Savings plan utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilization Utilization { get; set; }
        /// <summary>The array of aggregates of a savings plan's utilization</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IUtilizationAggregates> UtilizationAggregate { get; set; }
        /// <summary>The trend for a savings plan's utilization</summary>
        string UtilizationTrend { get; set; }

    }
}