// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>List of savings plans</summary>
    public partial class SavingsPlanModelListResult :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResult,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelList"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelList __savingsPlanModelList = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.SavingsPlanModelList();

        /// <summary>Internal Acessors for Summary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.Summary { get => (this._summary = this._summary ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.SavingsPlanSummaryCount()); set { {_summary = value;} } }

        /// <summary>Internal Acessors for SummaryCancelledCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryCancelledCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).CancelledCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).CancelledCount = value; }

        /// <summary>Internal Acessors for SummaryExpiredCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryExpiredCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ExpiredCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ExpiredCount = value; }

        /// <summary>Internal Acessors for SummaryExpiringCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryExpiringCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ExpiringCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ExpiringCount = value; }

        /// <summary>Internal Acessors for SummaryFailedCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).FailedCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).FailedCount = value; }

        /// <summary>Internal Acessors for SummaryNoBenefitCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryNoBenefitCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).NoBenefitCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).NoBenefitCount = value; }

        /// <summary>Internal Acessors for SummaryPendingCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryPendingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).PendingCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).PendingCount = value; }

        /// <summary>Internal Acessors for SummaryProcessingCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryProcessingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ProcessingCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ProcessingCount = value; }

        /// <summary>Internal Acessors for SummarySucceededCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummarySucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).SucceededCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).SucceededCount = value; }

        /// <summary>Internal Acessors for SummaryWarningCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListResultInternal.SummaryWarningCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).WarningCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).WarningCount = value; }

        /// <summary>Url to get the next page.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string NextLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListInternal)__savingsPlanModelList).NextLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListInternal)__savingsPlanModelList).NextLink = value ?? null; }

        /// <summary>Backing field for <see cref="Summary" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCount _summary;

        /// <summary>The roll out count summary of the savings plans</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCount Summary { get => (this._summary = this._summary ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.SavingsPlanSummaryCount()); set => this._summary = value; }

        /// <summary>The number of savings plans in Cancelled state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryCancelledCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).CancelledCount; }

        /// <summary>The number of savings plans in Expired state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryExpiredCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ExpiredCount; }

        /// <summary>The number of savings plans in Expiring state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryExpiringCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ExpiringCount; }

        /// <summary>The number of savings plans in Failed state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).FailedCount; }

        /// <summary>The number of savings plans in No Benefit state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryNoBenefitCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).NoBenefitCount; }

        /// <summary>The number of savings plans in Pending state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryPendingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).PendingCount; }

        /// <summary>The number of savings plans in Processing state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryProcessingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).ProcessingCount; }

        /// <summary>The number of savings plans in Succeeded state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummarySucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).SucceededCount; }

        /// <summary>The number of savings plans in Warning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SummaryWarningCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCountInternal)Summary).WarningCount; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModel> Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListInternal)__savingsPlanModelList).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListInternal)__savingsPlanModelList).Value = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="SavingsPlanModelListResult" /> instance.</summary>
        public SavingsPlanModelListResult()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__savingsPlanModelList), __savingsPlanModelList);
            await eventListener.AssertObjectIsValid(nameof(__savingsPlanModelList), __savingsPlanModelList);
        }
    }
    /// List of savings plans
    public partial interface ISavingsPlanModelListResult :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelList
    {
        /// <summary>The number of savings plans in Cancelled state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Cancelled state",
        SerializedName = @"cancelledCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryCancelledCount { get;  }
        /// <summary>The number of savings plans in Expired state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Expired state",
        SerializedName = @"expiredCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryExpiredCount { get;  }
        /// <summary>The number of savings plans in Expiring state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Expiring state",
        SerializedName = @"expiringCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryExpiringCount { get;  }
        /// <summary>The number of savings plans in Failed state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Failed state",
        SerializedName = @"failedCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryFailedCount { get;  }
        /// <summary>The number of savings plans in No Benefit state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in No Benefit state",
        SerializedName = @"noBenefitCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryNoBenefitCount { get;  }
        /// <summary>The number of savings plans in Pending state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Pending state",
        SerializedName = @"pendingCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryPendingCount { get;  }
        /// <summary>The number of savings plans in Processing state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Processing state",
        SerializedName = @"processingCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryProcessingCount { get;  }
        /// <summary>The number of savings plans in Succeeded state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Succeeded state",
        SerializedName = @"succeededCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummarySucceededCount { get;  }
        /// <summary>The number of savings plans in Warning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of savings plans in Warning state",
        SerializedName = @"warningCount",
        PossibleTypes = new [] { typeof(float) })]
        float? SummaryWarningCount { get;  }

    }
    /// List of savings plans
    internal partial interface ISavingsPlanModelListResultInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanModelListInternal
    {
        /// <summary>The roll out count summary of the savings plans</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISavingsPlanSummaryCount Summary { get; set; }
        /// <summary>The number of savings plans in Cancelled state</summary>
        float? SummaryCancelledCount { get; set; }
        /// <summary>The number of savings plans in Expired state</summary>
        float? SummaryExpiredCount { get; set; }
        /// <summary>The number of savings plans in Expiring state</summary>
        float? SummaryExpiringCount { get; set; }
        /// <summary>The number of savings plans in Failed state</summary>
        float? SummaryFailedCount { get; set; }
        /// <summary>The number of savings plans in No Benefit state</summary>
        float? SummaryNoBenefitCount { get; set; }
        /// <summary>The number of savings plans in Pending state</summary>
        float? SummaryPendingCount { get; set; }
        /// <summary>The number of savings plans in Processing state</summary>
        float? SummaryProcessingCount { get; set; }
        /// <summary>The number of savings plans in Succeeded state</summary>
        float? SummarySucceededCount { get; set; }
        /// <summary>The number of savings plans in Warning state</summary>
        float? SummaryWarningCount { get; set; }

    }
}