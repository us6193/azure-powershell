// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A tax identifier for the billing account.</summary>
    public partial class TaxIdentifier :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITaxIdentifier,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITaxIdentifierInternal
    {

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>The country of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The id of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>The scope of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>The status of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="TaxIdentifier" /> instance.</summary>
        public TaxIdentifier()
        {

        }
    }
    /// A tax identifier for the billing account.
    public partial interface ITaxIdentifier :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>The country of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The country of the tax identifier.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get; set; }
        /// <summary>The id of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The id of the tax identifier.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The scope of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The scope of the tax identifier.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>The status of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The status of the tax identifier.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Valid", "Invalid")]
        string Status { get; set; }
        /// <summary>The type of the tax identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of the tax identifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "BrazilCcmId", "BrazilCnpjId", "BrazilCpfId", "CanadianFederalExempt", "CanadianProvinceExempt", "ExternalTaxation", "IndiaFederalTanId", "IndiaFederalServiceTaxId", "IndiaPanId", "IndiaStateCstId", "IndiaStateGstINId", "IndiaStateVatId", "IntlExempt", "USExempt", "VatId", "LoveCode", "MobileBarCode", "NationalIdentificationNumber", "PublicSectorId")]
        string Type { get; set; }

    }
    /// A tax identifier for the billing account.
    internal partial interface ITaxIdentifierInternal

    {
        /// <summary>The country of the tax identifier.</summary>
        string Country { get; set; }
        /// <summary>The id of the tax identifier.</summary>
        string Id { get; set; }
        /// <summary>The scope of the tax identifier.</summary>
        string Scope { get; set; }
        /// <summary>The status of the tax identifier.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Valid", "Invalid")]
        string Status { get; set; }
        /// <summary>The type of the tax identifier.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "BrazilCcmId", "BrazilCnpjId", "BrazilCpfId", "CanadianFederalExempt", "CanadianProvinceExempt", "ExternalTaxation", "IndiaFederalTanId", "IndiaFederalServiceTaxId", "IndiaPanId", "IndiaStateCstId", "IndiaStateGstINId", "IndiaStateVatId", "IntlExempt", "USExempt", "VatId", "LoveCode", "MobileBarCode", "NationalIdentificationNumber", "PublicSectorId")]
        string Type { get; set; }

    }
}