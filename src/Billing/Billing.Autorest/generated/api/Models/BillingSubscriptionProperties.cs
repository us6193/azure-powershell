// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The billing properties of a subscription.</summary>
    public partial class BillingSubscriptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutoRenew" /> property.</summary>
        private string _autoRenew;

        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string AutoRenew { get => this._autoRenew; set => this._autoRenew = value; }

        /// <summary>Backing field for <see cref="Beneficiary" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary _beneficiary;

        /// <summary>The beneficiary of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary Beneficiary { get => (this._beneficiary = this._beneficiary ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Beneficiary()); set => this._beneficiary = value; }

        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BeneficiaryObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiaryInternal)Beneficiary).ObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiaryInternal)Beneficiary).ObjectId = value ?? null; }

        /// <summary>Backing field for <see cref="BeneficiaryTenantId" /> property.</summary>
        private string _beneficiaryTenantId;

        /// <summary>The provisioning tenant of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BeneficiaryTenantId { get => this._beneficiaryTenantId; set => this._beneficiaryTenantId = value; }

        /// <summary>Backing field for <see cref="BillingFrequency" /> property.</summary>
        private string _billingFrequency;

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingFrequency { get => this._billingFrequency; set => this._billingFrequency = value; }

        /// <summary>Backing field for <see cref="BillingPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies _billingPolicy;

        /// <summary>Dictionary of billing policies associated with the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies BillingPolicy { get => (this._billingPolicy = this._billingPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingSubscriptionPropertiesBillingPolicies()); }

        /// <summary>Backing field for <see cref="BillingProfileDisplayName" /> property.</summary>
        private string _billingProfileDisplayName;

        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingProfileDisplayName { get => this._billingProfileDisplayName; }

        /// <summary>Backing field for <see cref="BillingProfileId" /> property.</summary>
        private string _billingProfileId;

        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingProfileId { get => this._billingProfileId; set => this._billingProfileId = value; }

        /// <summary>Backing field for <see cref="BillingProfileName" /> property.</summary>
        private string _billingProfileName;

        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingProfileName { get => this._billingProfileName; }

        /// <summary>Backing field for <see cref="ConsumptionCostCenter" /> property.</summary>
        private string _consumptionCostCenter;

        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ConsumptionCostCenter { get => this._consumptionCostCenter; set => this._consumptionCostCenter = value; }

        /// <summary>Backing field for <see cref="CustomerDisplayName" /> property.</summary>
        private string _customerDisplayName;

        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string CustomerDisplayName { get => this._customerDisplayName; }

        /// <summary>Backing field for <see cref="CustomerId" /> property.</summary>
        private string _customerId;

        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string CustomerId { get => this._customerId; set => this._customerId = value; }

        /// <summary>Backing field for <see cref="CustomerName" /> property.</summary>
        private string _customerName;

        /// <summary>The ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string CustomerName { get => this._customerName; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The name of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="EnrollmentAccountDisplayName" /> property.</summary>
        private string _enrollmentAccountDisplayName;

        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string EnrollmentAccountDisplayName { get => this._enrollmentAccountDisplayName; }

        /// <summary>Backing field for <see cref="EnrollmentAccountId" /> property.</summary>
        private string _enrollmentAccountId;

        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string EnrollmentAccountId { get => this._enrollmentAccountId; }

        /// <summary>Backing field for <see cref="EnrollmentAccountSubscriptionDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails _enrollmentAccountSubscriptionDetail;

        /// <summary>
        /// Enrollment Account Subscription details. This field is available only for the Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails EnrollmentAccountSubscriptionDetail { get => (this._enrollmentAccountSubscriptionDetail = this._enrollmentAccountSubscriptionDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.EnrollmentAccountSubscriptionDetails()); }

        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetailsInternal)EnrollmentAccountSubscriptionDetail).EnrollmentAccountStartDate; }

        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetailsInternal)EnrollmentAccountSubscriptionDetail).SubscriptionEnrollmentAccountStatus; }

        /// <summary>Backing field for <see cref="InvoiceSectionDisplayName" /> property.</summary>
        private string _invoiceSectionDisplayName;

        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string InvoiceSectionDisplayName { get => this._invoiceSectionDisplayName; }

        /// <summary>Backing field for <see cref="InvoiceSectionId" /> property.</summary>
        private string _invoiceSectionId;

        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string InvoiceSectionId { get => this._invoiceSectionId; set => this._invoiceSectionId = value; }

        /// <summary>Backing field for <see cref="InvoiceSectionName" /> property.</summary>
        private string _invoiceSectionName;

        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string InvoiceSectionName { get => this._invoiceSectionName; }

        /// <summary>Backing field for <see cref="LastMonthCharge" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount _lastMonthCharge;

        /// <summary>
        /// The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing
        /// accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount LastMonthCharge { get => (this._lastMonthCharge = this._lastMonthCharge ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string LastMonthChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)LastMonthCharge).Currency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? LastMonthChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)LastMonthCharge).Value; }

        /// <summary>Internal Acessors for Beneficiary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.Beneficiary { get => (this._beneficiary = this._beneficiary ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Beneficiary()); set { {_beneficiary = value;} } }

        /// <summary>Internal Acessors for BillingPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.BillingPolicy { get => (this._billingPolicy = this._billingPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingSubscriptionPropertiesBillingPolicies()); set { {_billingPolicy = value;} } }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.BillingProfileDisplayName { get => this._billingProfileDisplayName; set { {_billingProfileDisplayName = value;} } }

        /// <summary>Internal Acessors for BillingProfileName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.BillingProfileName { get => this._billingProfileName; set { {_billingProfileName = value;} } }

        /// <summary>Internal Acessors for CustomerDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.CustomerDisplayName { get => this._customerDisplayName; set { {_customerDisplayName = value;} } }

        /// <summary>Internal Acessors for CustomerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.CustomerName { get => this._customerName; set { {_customerName = value;} } }

        /// <summary>Internal Acessors for EnrollmentAccountDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountDisplayName { get => this._enrollmentAccountDisplayName; set { {_enrollmentAccountDisplayName = value;} } }

        /// <summary>Internal Acessors for EnrollmentAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountId { get => this._enrollmentAccountId; set { {_enrollmentAccountId = value;} } }

        /// <summary>Internal Acessors for EnrollmentAccountSubscriptionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountSubscriptionDetail { get => (this._enrollmentAccountSubscriptionDetail = this._enrollmentAccountSubscriptionDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.EnrollmentAccountSubscriptionDetails()); set { {_enrollmentAccountSubscriptionDetail = value;} } }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate
        /// </summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetailsInternal)EnrollmentAccountSubscriptionDetail).EnrollmentAccountStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetailsInternal)EnrollmentAccountSubscriptionDetail).EnrollmentAccountStartDate = value; }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetailsInternal)EnrollmentAccountSubscriptionDetail).SubscriptionEnrollmentAccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetailsInternal)EnrollmentAccountSubscriptionDetail).SubscriptionEnrollmentAccountStatus = value; }

        /// <summary>Internal Acessors for InvoiceSectionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.InvoiceSectionDisplayName { get => this._invoiceSectionDisplayName; set { {_invoiceSectionDisplayName = value;} } }

        /// <summary>Internal Acessors for InvoiceSectionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.InvoiceSectionName { get => this._invoiceSectionName; set { {_invoiceSectionName = value;} } }

        /// <summary>Internal Acessors for LastMonthCharge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.LastMonthCharge { get => (this._lastMonthCharge = this._lastMonthCharge ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Amount()); set { {_lastMonthCharge = value;} } }

        /// <summary>Internal Acessors for LastMonthChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.LastMonthChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)LastMonthCharge).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)LastMonthCharge).Currency = value; }

        /// <summary>Internal Acessors for LastMonthChargeValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.LastMonthChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)LastMonthCharge).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)LastMonthCharge).Value = value; }

        /// <summary>Internal Acessors for MonthToDateCharge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.MonthToDateCharge { get => (this._monthToDateCharge = this._monthToDateCharge ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Amount()); set { {_monthToDateCharge = value;} } }

        /// <summary>Internal Acessors for MonthToDateChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.MonthToDateChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)MonthToDateCharge).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)MonthToDateCharge).Currency = value; }

        /// <summary>Internal Acessors for MonthToDateChargeValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.MonthToDateChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)MonthToDateCharge).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)MonthToDateCharge).Value = value; }

        /// <summary>Internal Acessors for NextBillingCycleDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.NextBillingCycleDetail { get => (this._nextBillingCycleDetail = this._nextBillingCycleDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.NextBillingCycleDetails()); set { {_nextBillingCycleDetail = value;} } }

        /// <summary>Internal Acessors for NextBillingCycleDetailBillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetailsInternal)NextBillingCycleDetail).BillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetailsInternal)NextBillingCycleDetail).BillingFrequency = value; }

        /// <summary>Internal Acessors for OfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.OfferId { get => this._offerId; set { {_offerId = value;} } }

        /// <summary>Internal Acessors for OperationStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.OperationStatus { get => this._operationStatus; set { {_operationStatus = value;} } }

        /// <summary>Internal Acessors for ProductCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ProductCategory { get => this._productCategory; set { {_productCategory = value;} } }

        /// <summary>Internal Acessors for ProductType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ProductType { get => this._productType; set { {_productType = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for PurchaseDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.PurchaseDate { get => this._purchaseDate; set { {_purchaseDate = value;} } }

        /// <summary>Internal Acessors for RenewalTermDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetail { get => (this._renewalTermDetail = this._renewalTermDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RenewalTermDetails()); set { {_renewalTermDetail = value;} } }

        /// <summary>Internal Acessors for RenewalTermDetailBillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).BillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).BillingFrequency = value; }

        /// <summary>Internal Acessors for RenewalTermDetailProductId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).ProductId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).ProductId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailProductTypeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).ProductTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).ProductTypeId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailSkuId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).SkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).SkuId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailTermDuration</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailTermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).TermDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).TermDuration = value; }

        /// <summary>Internal Acessors for RenewalTermDetailTermEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.RenewalTermDetailTermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).TermEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).TermEndDate = value; }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.Reseller { get => (this._reseller = this._reseller ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Reseller()); set { {_reseller = value;} } }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResellerInternal)Reseller).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResellerInternal)Reseller).Description = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResellerInternal)Reseller).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResellerInternal)Reseller).Id = value; }

        /// <summary>Internal Acessors for ResourceUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.ResourceUri { get => this._resourceUri; set { {_resourceUri = value;} } }

        /// <summary>Internal Acessors for SkuDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SkuDescription { get => this._skuDescription; set { {_skuDescription = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SubscriptionId { get => this._subscriptionId; set { {_subscriptionId = value;} } }

        /// <summary>Internal Acessors for SuspensionReason</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SuspensionReason { get => this._suspensionReason; set { {_suspensionReason = value;} } }

        /// <summary>Internal Acessors for SuspensionReasonDetail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SuspensionReasonDetail { get => this._suspensionReasonDetail; set { {_suspensionReasonDetail = value;} } }

        /// <summary>Internal Acessors for SystemOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SystemOverride { get => (this._systemOverride = this._systemOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.SystemOverrides()); set { {_systemOverride = value;} } }

        /// <summary>Internal Acessors for SystemOverrideCancellation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverridesInternal)SystemOverride).Cancellation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverridesInternal)SystemOverride).Cancellation = value; }

        /// <summary>Internal Acessors for SystemOverrideCancellationAllowedEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverridesInternal)SystemOverride).CancellationAllowedEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverridesInternal)SystemOverride).CancellationAllowedEndDate = value; }

        /// <summary>Internal Acessors for TermEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.TermEndDate { get => this._termEndDate; set { {_termEndDate = value;} } }

        /// <summary>Internal Acessors for TermStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal.TermStartDate { get => this._termStartDate; set { {_termStartDate = value;} } }

        /// <summary>Backing field for <see cref="MonthToDateCharge" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount _monthToDateCharge;

        /// <summary>
        /// The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement
        /// billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount MonthToDateCharge { get => (this._monthToDateCharge = this._monthToDateCharge ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Amount()); }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string MonthToDateChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)MonthToDateCharge).Currency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? MonthToDateChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmountInternal)MonthToDateCharge).Value; }

        /// <summary>Backing field for <see cref="NextBillingCycleDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails _nextBillingCycleDetail;

        /// <summary>Next billing cycle details of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails NextBillingCycleDetail { get => (this._nextBillingCycleDetail = this._nextBillingCycleDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.NextBillingCycleDetails()); }

        /// <summary>Billing frequency of the product under the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetailsInternal)NextBillingCycleDetail).BillingFrequency; }

        /// <summary>Backing field for <see cref="OfferId" /> property.</summary>
        private string _offerId;

        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string OfferId { get => this._offerId; }

        /// <summary>Backing field for <see cref="OperationStatus" /> property.</summary>
        private string _operationStatus;

        /// <summary>
        /// The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write
        /// operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest
        /// API version for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string OperationStatus { get => this._operationStatus; }

        /// <summary>Backing field for <see cref="ProductCategory" /> property.</summary>
        private string _productCategory;

        /// <summary>
        /// The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware,
        /// ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductCategory { get => this._productCategory; }

        /// <summary>Backing field for <see cref="ProductType" /> property.</summary>
        private string _productType;

        /// <summary>Type of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductType { get => this._productType; }

        /// <summary>Backing field for <see cref="ProductTypeId" /> property.</summary>
        private string _productTypeId;

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProductTypeId { get => this._productTypeId; set => this._productTypeId = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ProvisioningTenantId" /> property.</summary>
        private string _provisioningTenantId;

        /// <summary>The tenant in which the subscription is provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ProvisioningTenantId { get => this._provisioningTenantId; set => this._provisioningTenantId = value; }

        /// <summary>Backing field for <see cref="PurchaseDate" /> property.</summary>
        private global::System.DateTime? _purchaseDate;

        /// <summary>Purchase date of the product in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? PurchaseDate { get => this._purchaseDate; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private long? _quantity;

        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public long? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="RenewalTermDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails _renewalTermDetail;

        /// <summary>Details for the next renewal term of a subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails RenewalTermDetail { get => (this._renewalTermDetail = this._renewalTermDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RenewalTermDetails()); }

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).BillingFrequency; }

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).ProductId; }

        /// <summary>Type Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).ProductTypeId; }

        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public long? RenewalTermDetailQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).Quantity = value ?? default(long); }

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).SkuId; }

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailTermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).TermDuration; }

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? RenewalTermDetailTermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetailsInternal)RenewalTermDetail).TermEndDate; }

        /// <summary>Backing field for <see cref="Reseller" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller _reseller;

        /// <summary>
        /// Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller Reseller { get => (this._reseller = this._reseller ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Reseller()); }

        /// <summary>The name of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResellerInternal)Reseller).Description; }

        /// <summary>The MPN ID of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResellerInternal)Reseller).Id; }

        /// <summary>Backing field for <see cref="ResourceUri" /> property.</summary>
        private string _resourceUri;

        /// <summary>Unique identifier of the linked resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ResourceUri { get => this._resourceUri; }

        /// <summary>Backing field for <see cref="SkuDescription" /> property.</summary>
        private string _skuDescription;

        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for billing
        /// accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string SkuDescription { get => this._skuDescription; }

        /// <summary>Backing field for <see cref="SkuId" /> property.</summary>
        private string _skuId;

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string SkuId { get => this._skuId; set => this._skuId = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Status { get => this._status; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The ID of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; }

        /// <summary>Backing field for <see cref="SuspensionReason" /> property.</summary>
        private System.Collections.Generic.List<string> _suspensionReason;

        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> SuspensionReason { get => this._suspensionReason; }

        /// <summary>Backing field for <see cref="SuspensionReasonDetail" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> _suspensionReasonDetail;

        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SuspensionReasonDetail { get => this._suspensionReasonDetail; }

        /// <summary>Backing field for <see cref="SystemOverride" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides _systemOverride;

        /// <summary>System imposed policies that regulate behavior of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides SystemOverride { get => (this._systemOverride = this._systemOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.SystemOverrides()); set => this._systemOverride = value; }

        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverridesInternal)SystemOverride).Cancellation; }

        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverridesInternal)SystemOverride).CancellationAllowedEndDate; }

        /// <summary>The ID that uniquely identifies a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiaryInternal)Beneficiary).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiaryInternal)Beneficiary).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="TermDuration" /> property.</summary>
        private string _termDuration;

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string TermDuration { get => this._termDuration; set => this._termDuration = value; }

        /// <summary>Backing field for <see cref="TermEndDate" /> property.</summary>
        private global::System.DateTime? _termEndDate;

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? TermEndDate { get => this._termEndDate; }

        /// <summary>Backing field for <see cref="TermStartDate" /> property.</summary>
        private global::System.DateTime? _termStartDate;

        /// <summary>Start date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public global::System.DateTime? TermStartDate { get => this._termStartDate; }

        /// <summary>Creates an new <see cref="BillingSubscriptionProperties" /> instance.</summary>
        public BillingSubscriptionProperties()
        {

        }
    }
    /// The billing properties of a subscription.
    public partial interface IBillingSubscriptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether auto renewal is turned on or off for a product.",
        SerializedName = @"autoRenew",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Off", "On")]
        string AutoRenew { get; set; }
        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID that uniquely identifies a user in a tenant.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string BeneficiaryObjectId { get; set; }
        /// <summary>The provisioning tenant of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The provisioning tenant of the subscription.",
        SerializedName = @"beneficiaryTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string BeneficiaryTenantId { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingFrequency { get; set; }
        /// <summary>Dictionary of billing policies associated with the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Dictionary of billing policies associated with the subscription.",
        SerializedName = @"billingPolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies BillingPolicy { get;  }
        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the billing profile.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The fully qualified ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get; set; }
        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileName { get;  }
        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer Agreement or Enterprise Agreement Type billing accounts.",
        SerializedName = @"consumptionCostCenter",
        PossibleTypes = new [] { typeof(string) })]
        string ConsumptionCostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the customer.",
        SerializedName = @"customerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The fully qualified ID that uniquely identifies a customer.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get; set; }
        /// <summary>The ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies a customer.",
        SerializedName = @"customerName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerName { get;  }
        /// <summary>The name of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the billing subscription.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.",
        SerializedName = @"enrollmentAccountDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentAccountDisplayName { get;  }
        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.",
        SerializedName = @"enrollmentAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentAccountId { get;  }
        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement Type.",
        SerializedName = @"enrollmentAccountStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get;  }
        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.",
        SerializedName = @"subscriptionEnrollmentAccountStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Active", "Cancelled", "Expired", "Deleted", "TransferredOut", "Transferring", "Inactive")]
        string EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get;  }
        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the invoice section.",
        SerializedName = @"invoiceSectionDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The fully qualified ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionId",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionId { get; set; }
        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionName { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string LastMonthChargeCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? LastMonthChargeValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string MonthToDateChargeCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? MonthToDateChargeValue { get;  }
        /// <summary>Billing frequency of the product under the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Billing frequency of the product under the subscription.",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string NextBillingCycleDetailBillingFrequency { get;  }
        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get;  }
        /// <summary>
        /// The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write
        /// operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest
        /// API version for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest API version for more details.",
        SerializedName = @"operationStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "LockedForUpdate")]
        string OperationStatus { get;  }
        /// <summary>
        /// The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware,
        /// ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware, ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.",
        SerializedName = @"productCategory",
        PossibleTypes = new [] { typeof(string) })]
        string ProductCategory { get;  }
        /// <summary>Type of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the product for which the subscription is purchased.",
        SerializedName = @"productType",
        PossibleTypes = new [] { typeof(string) })]
        string ProductType { get;  }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Id of the product for which the subscription is purchased.",
        SerializedName = @"productTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductTypeId { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the resource during a long-running operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get;  }
        /// <summary>The tenant in which the subscription is provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The tenant in which the subscription is provisioned.",
        SerializedName = @"provisioningTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningTenantId { get; set; }
        /// <summary>Purchase date of the product in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Purchase date of the product in UTC time.",
        SerializedName = @"purchaseDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDate { get;  }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The quantity of licenses or fulfillment units for the subscription.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(long) })]
        long? Quantity { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailBillingFrequency { get;  }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Id of the product for which the subscription is purchased.",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailProductId { get;  }
        /// <summary>Type Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type Id of the product for which the subscription is purchased.",
        SerializedName = @"productTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailProductTypeId { get;  }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The quantity of licenses or fulfillment units for the subscription.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(long) })]
        long? RenewalTermDetailQuantity { get;  }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailSkuId { get;  }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"termDuration",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailTermDuration { get;  }
        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"End date of the term in UTC time.",
        SerializedName = @"termEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RenewalTermDetailTermEndDate { get;  }
        /// <summary>The name of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the reseller.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerDescription { get;  }
        /// <summary>The MPN ID of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The MPN ID of the reseller.",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get;  }
        /// <summary>Unique identifier of the linked resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Unique identifier of the linked resource.",
        SerializedName = @"resourceUri",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceUri { get;  }
        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for billing
        /// accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The SKU description of the product for which the subscription is purchased. This field is is only available for billing accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get;  }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get; set; }
        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the subscription. This field is not available for Enterprise Agreement billing accounts",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Unknown", "Active", "Disabled", "Deleted", "Warned", "Expiring", "Expired", "AutoRenew", "Cancelled", "Suspended", "Failed")]
        string Status { get;  }
        /// <summary>The ID of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.",
        SerializedName = @"suspensionReasons",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SuspensionReason { get;  }
        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.",
        SerializedName = @"suspensionReasonDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SuspensionReasonDetail { get;  }
        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.",
        SerializedName = @"cancellation",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("NotAllowed", "Allowed")]
        string SystemOverrideCancellation { get;  }
        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The end date in UTC time by when the self-serve cancellation ends.",
        SerializedName = @"cancellationAllowedEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get;  }
        /// <summary>The ID that uniquely identifies a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID that uniquely identifies a tenant.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"termDuration",
        PossibleTypes = new [] { typeof(string) })]
        string TermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"End date of the term in UTC time.",
        SerializedName = @"termEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TermEndDate { get;  }
        /// <summary>Start date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Start date of the term in UTC time.",
        SerializedName = @"termStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TermStartDate { get;  }

    }
    /// The billing properties of a subscription.
    internal partial interface IBillingSubscriptionPropertiesInternal

    {
        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Off", "On")]
        string AutoRenew { get; set; }
        /// <summary>The beneficiary of the billing subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary Beneficiary { get; set; }
        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        string BeneficiaryObjectId { get; set; }
        /// <summary>The provisioning tenant of the subscription.</summary>
        string BeneficiaryTenantId { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string BillingFrequency { get; set; }
        /// <summary>Dictionary of billing policies associated with the subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies BillingPolicy { get; set; }
        /// <summary>The name of the billing profile.</summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        string BillingProfileId { get; set; }
        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        string BillingProfileName { get; set; }
        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        string ConsumptionCostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        string CustomerDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        string CustomerId { get; set; }
        /// <summary>The ID that uniquely identifies a customer.</summary>
        string CustomerName { get; set; }
        /// <summary>The name of the billing subscription.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        string EnrollmentAccountDisplayName { get; set; }
        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        string EnrollmentAccountId { get; set; }
        /// <summary>
        /// Enrollment Account Subscription details. This field is available only for the Enterprise Agreement Type billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails EnrollmentAccountSubscriptionDetail { get; set; }
        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        global::System.DateTime? EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get; set; }
        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Active", "Cancelled", "Expired", "Deleted", "TransferredOut", "Transferring", "Inactive")]
        string EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get; set; }
        /// <summary>The name of the invoice section.</summary>
        string InvoiceSectionDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionId { get; set; }
        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionName { get; set; }
        /// <summary>
        /// The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing
        /// accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount LastMonthCharge { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string LastMonthChargeCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? LastMonthChargeValue { get; set; }
        /// <summary>
        /// The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement
        /// billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount MonthToDateCharge { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string MonthToDateChargeCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? MonthToDateChargeValue { get; set; }
        /// <summary>Next billing cycle details of the subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails NextBillingCycleDetail { get; set; }
        /// <summary>Billing frequency of the product under the subscription.</summary>
        string NextBillingCycleDetailBillingFrequency { get; set; }
        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        string OfferId { get; set; }
        /// <summary>
        /// The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write
        /// operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest
        /// API version for more details.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "LockedForUpdate")]
        string OperationStatus { get; set; }
        /// <summary>
        /// The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware,
        /// ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
        /// </summary>
        string ProductCategory { get; set; }
        /// <summary>Type of the product for which the subscription is purchased.</summary>
        string ProductType { get; set; }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        string ProductTypeId { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get; set; }
        /// <summary>The tenant in which the subscription is provisioned.</summary>
        string ProvisioningTenantId { get; set; }
        /// <summary>Purchase date of the product in UTC time.</summary>
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        long? Quantity { get; set; }
        /// <summary>Details for the next renewal term of a subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails RenewalTermDetail { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string RenewalTermDetailBillingFrequency { get; set; }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        string RenewalTermDetailProductId { get; set; }
        /// <summary>Type Id of the product for which the subscription is purchased.</summary>
        string RenewalTermDetailProductTypeId { get; set; }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        long? RenewalTermDetailQuantity { get; set; }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        string RenewalTermDetailSkuId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string RenewalTermDetailTermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        global::System.DateTime? RenewalTermDetailTermEndDate { get; set; }
        /// <summary>
        /// Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller Reseller { get; set; }
        /// <summary>The name of the reseller.</summary>
        string ResellerDescription { get; set; }
        /// <summary>The MPN ID of the reseller.</summary>
        string ResellerId { get; set; }
        /// <summary>Unique identifier of the linked resource.</summary>
        string ResourceUri { get; set; }
        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for billing
        /// accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
        /// </summary>
        string SkuDescription { get; set; }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        string SkuId { get; set; }
        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Unknown", "Active", "Disabled", "Deleted", "Warned", "Expiring", "Expired", "AutoRenew", "Cancelled", "Suspended", "Failed")]
        string Status { get; set; }
        /// <summary>The ID of the subscription.</summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        System.Collections.Generic.List<string> SuspensionReason { get; set; }
        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SuspensionReasonDetail { get; set; }
        /// <summary>System imposed policies that regulate behavior of the subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides SystemOverride { get; set; }
        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("NotAllowed", "Allowed")]
        string SystemOverrideCancellation { get; set; }
        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get; set; }
        /// <summary>The ID that uniquely identifies a tenant.</summary>
        string TenantId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string TermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        global::System.DateTime? TermEndDate { get; set; }
        /// <summary>Start date of the term in UTC time.</summary>
        global::System.DateTime? TermStartDate { get; set; }

    }
}