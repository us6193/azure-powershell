// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A billing subscription alias.</summary>
    public partial class BillingSubscriptionAlias :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAlias,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1 __proxyResourceWithTags1 = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ProxyResourceWithTags1();

        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).AutoRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).AutoRenew = value ?? null; }

        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BeneficiaryObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryObjectId = value ?? null; }

        /// <summary>The provisioning tenant of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BeneficiaryTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryTenantId = value ?? null; }

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingFrequency = value ?? null; }

        /// <summary>Dictionary of billing policies associated with the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies BillingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingPolicy; }

        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileId = value ?? null; }

        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileName; }

        /// <summary>The ID of the billing subscription with the subscription alias.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasPropertiesInternal)Property).BillingSubscriptionId; }

        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ConsumptionCostCenter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ConsumptionCostCenter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ConsumptionCostCenter = value ?? null; }

        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerId = value ?? null; }

        /// <summary>The ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerName; }

        /// <summary>The name of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountDisplayName; }

        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountId; }

        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate; }

        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id; }

        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionId = value ?? null; }

        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionName; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string LastMonthChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthChargeCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? LastMonthChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthChargeValue; }

        /// <summary>Internal Acessors for Beneficiary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.Beneficiary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Beneficiary; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Beneficiary = value; }

        /// <summary>Internal Acessors for BillingPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.BillingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingPolicy = value; }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileDisplayName = value; }

        /// <summary>Internal Acessors for BillingProfileName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.BillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).BillingProfileName = value; }

        /// <summary>Internal Acessors for BillingSubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.BillingSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasPropertiesInternal)Property).BillingSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasPropertiesInternal)Property).BillingSubscriptionId = value; }

        /// <summary>Internal Acessors for CustomerDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerDisplayName = value; }

        /// <summary>Internal Acessors for CustomerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.CustomerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).CustomerName = value; }

        /// <summary>Internal Acessors for EnrollmentAccountDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.EnrollmentAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountDisplayName = value; }

        /// <summary>Internal Acessors for EnrollmentAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.EnrollmentAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountId = value; }

        /// <summary>Internal Acessors for EnrollmentAccountSubscriptionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.EnrollmentAccountSubscriptionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetail = value; }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate
        /// </summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate = value; }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus = value; }

        /// <summary>Internal Acessors for InvoiceSectionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionDisplayName = value; }

        /// <summary>Internal Acessors for InvoiceSectionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.InvoiceSectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionName = value; }

        /// <summary>Internal Acessors for LastMonthCharge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.LastMonthCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthCharge = value; }

        /// <summary>Internal Acessors for LastMonthChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.LastMonthChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthChargeCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthChargeCurrency = value; }

        /// <summary>Internal Acessors for LastMonthChargeValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.LastMonthChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthChargeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).LastMonthChargeValue = value; }

        /// <summary>Internal Acessors for MonthToDateCharge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.MonthToDateCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateCharge = value; }

        /// <summary>Internal Acessors for MonthToDateChargeCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.MonthToDateChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateChargeCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateChargeCurrency = value; }

        /// <summary>Internal Acessors for MonthToDateChargeValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.MonthToDateChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateChargeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateChargeValue = value; }

        /// <summary>Internal Acessors for NextBillingCycleDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.NextBillingCycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetail = value; }

        /// <summary>Internal Acessors for NextBillingCycleDetailBillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetailBillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetailBillingFrequency = value; }

        /// <summary>Internal Acessors for OfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.OfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).OfferId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).OfferId = value; }

        /// <summary>Internal Acessors for OperationStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.OperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).OperationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).OperationStatus = value; }

        /// <summary>Internal Acessors for ProductCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.ProductCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductCategory = value; }

        /// <summary>Internal Acessors for ProductType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.ProductType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingSubscriptionAliasProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for PurchaseDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).PurchaseDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).PurchaseDate = value; }

        /// <summary>Internal Acessors for RenewalTermDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.RenewalTermDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetail = value; }

        /// <summary>Internal Acessors for RenewalTermDetailBillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.RenewalTermDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailBillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailBillingFrequency = value; }

        /// <summary>Internal Acessors for RenewalTermDetailProductId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.RenewalTermDetailProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailProductTypeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.RenewalTermDetailProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductTypeId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailSkuId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.RenewalTermDetailSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailSkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailSkuId = value; }

        /// <summary>Internal Acessors for RenewalTermDetailTermDuration</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.RenewalTermDetailTermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermDuration = value; }

        /// <summary>Internal Acessors for RenewalTermDetailTermEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.RenewalTermDetailTermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermEndDate = value; }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.Reseller { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Reseller; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Reseller = value; }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResellerDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResellerDescription = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResellerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResellerId = value; }

        /// <summary>Internal Acessors for ResourceUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.ResourceUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResourceUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResourceUri = value; }

        /// <summary>Internal Acessors for SkuDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SkuDescription = value; }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SubscriptionId = value; }

        /// <summary>Internal Acessors for SuspensionReason</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.SuspensionReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SuspensionReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SuspensionReason = value; }

        /// <summary>Internal Acessors for SuspensionReasonDetail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.SuspensionReasonDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SuspensionReasonDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SuspensionReasonDetail = value; }

        /// <summary>Internal Acessors for SystemOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.SystemOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverride = value; }

        /// <summary>Internal Acessors for SystemOverrideCancellation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellation = value; }

        /// <summary>Internal Acessors for SystemOverrideCancellationAllowedEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellationAllowedEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellationAllowedEndDate = value; }

        /// <summary>Internal Acessors for TermEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.TermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermEndDate = value; }

        /// <summary>Internal Acessors for TermStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasInternal.TermStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermStartDate = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type = value; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string MonthToDateChargeCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateChargeCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? MonthToDateChargeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).MonthToDateChargeValue; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name; }

        /// <summary>Billing frequency of the product under the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetailBillingFrequency; }

        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string OfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).OfferId; }

        /// <summary>
        /// The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write
        /// operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest
        /// API version for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string OperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).OperationStatus; }

        /// <summary>
        /// The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware,
        /// ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductCategory; }

        /// <summary>Type of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductType; }

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProductTypeId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasProperties _property;

        /// <summary>The properties of a(n) BillingSubscriptionAlias</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingSubscriptionAliasProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The tenant in which the subscription is provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProvisioningTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProvisioningTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ProvisioningTenantId = value ?? null; }

        /// <summary>Purchase date of the product in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).PurchaseDate; }

        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public long? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Quantity = value ?? default(long); }

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailBillingFrequency; }

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductId; }

        /// <summary>Type Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductTypeId; }

        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public long? RenewalTermDetailQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailQuantity = value ?? default(long); }

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailSkuId; }

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailTermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermDuration; }

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? RenewalTermDetailTermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermEndDate; }

        /// <summary>The name of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResellerDescription; }

        /// <summary>The MPN ID of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResellerId; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Unique identifier of the linked resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ResourceUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).ResourceUri; }

        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for billing
        /// accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SkuDescription; }

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SkuId = value ?? null; }

        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).Status; }

        /// <summary>The ID of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SubscriptionId; }

        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> SuspensionReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SuspensionReason; }

        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SuspensionReasonDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SuspensionReasonDetail; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellation; }

        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellationAllowedEndDate; }

        /// <summary>
        /// Dictionary of metadata associated with the resource. It may not be populated for all resource types. Maximum key/value
        /// length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? /
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag = value ?? null /* model class */; }

        /// <summary>The ID that uniquely identifies a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TenantId = value ?? null; }

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermDuration = value ?? null; }

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? TermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermEndDate; }

        /// <summary>Start date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? TermStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesInternal)Property).TermStartDate; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type; }

        /// <summary>Creates an new <see cref="BillingSubscriptionAlias" /> instance.</summary>
        public BillingSubscriptionAlias()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
            await eventListener.AssertObjectIsValid(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
        }
    }
    /// A billing subscription alias.
    public partial interface IBillingSubscriptionAlias :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1
    {
        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether auto renewal is turned on or off for a product.",
        SerializedName = @"autoRenew",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Off", "On")]
        string AutoRenew { get; set; }
        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID that uniquely identifies a user in a tenant.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string BeneficiaryObjectId { get; set; }
        /// <summary>The provisioning tenant of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The provisioning tenant of the subscription.",
        SerializedName = @"beneficiaryTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string BeneficiaryTenantId { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingFrequency { get; set; }
        /// <summary>Dictionary of billing policies associated with the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Dictionary of billing policies associated with the subscription.",
        SerializedName = @"billingPolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies BillingPolicy { get;  }
        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the billing profile.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The fully qualified ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get; set; }
        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileName { get;  }
        /// <summary>The ID of the billing subscription with the subscription alias.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID of the billing subscription with the subscription alias.",
        SerializedName = @"billingSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingSubscriptionId { get;  }
        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer Agreement or Enterprise Agreement Type billing accounts.",
        SerializedName = @"consumptionCostCenter",
        PossibleTypes = new [] { typeof(string) })]
        string ConsumptionCostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the customer.",
        SerializedName = @"customerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The fully qualified ID that uniquely identifies a customer.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get; set; }
        /// <summary>The ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies a customer.",
        SerializedName = @"customerName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerName { get;  }
        /// <summary>The name of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the billing subscription.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.",
        SerializedName = @"enrollmentAccountDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentAccountDisplayName { get;  }
        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.",
        SerializedName = @"enrollmentAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentAccountId { get;  }
        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement Type.",
        SerializedName = @"enrollmentAccountStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get;  }
        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.",
        SerializedName = @"subscriptionEnrollmentAccountStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Active", "Cancelled", "Expired", "Deleted", "TransferredOut", "Transferring", "Inactive")]
        string EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get;  }
        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the invoice section.",
        SerializedName = @"invoiceSectionDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The fully qualified ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionId",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionId { get; set; }
        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionName { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string LastMonthChargeCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? LastMonthChargeValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string MonthToDateChargeCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? MonthToDateChargeValue { get;  }
        /// <summary>Billing frequency of the product under the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Billing frequency of the product under the subscription.",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string NextBillingCycleDetailBillingFrequency { get;  }
        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get;  }
        /// <summary>
        /// The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write
        /// operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest
        /// API version for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest API version for more details.",
        SerializedName = @"operationStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "LockedForUpdate")]
        string OperationStatus { get;  }
        /// <summary>
        /// The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware,
        /// ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware, ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.",
        SerializedName = @"productCategory",
        PossibleTypes = new [] { typeof(string) })]
        string ProductCategory { get;  }
        /// <summary>Type of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the product for which the subscription is purchased.",
        SerializedName = @"productType",
        PossibleTypes = new [] { typeof(string) })]
        string ProductType { get;  }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Id of the product for which the subscription is purchased.",
        SerializedName = @"productTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductTypeId { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the resource during a long-running operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get;  }
        /// <summary>The tenant in which the subscription is provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The tenant in which the subscription is provisioned.",
        SerializedName = @"provisioningTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningTenantId { get; set; }
        /// <summary>Purchase date of the product in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Purchase date of the product in UTC time.",
        SerializedName = @"purchaseDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDate { get;  }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The quantity of licenses or fulfillment units for the subscription.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(long) })]
        long? Quantity { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailBillingFrequency { get;  }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Id of the product for which the subscription is purchased.",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailProductId { get;  }
        /// <summary>Type Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type Id of the product for which the subscription is purchased.",
        SerializedName = @"productTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailProductTypeId { get;  }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The quantity of licenses or fulfillment units for the subscription.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(long) })]
        long? RenewalTermDetailQuantity { get;  }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailSkuId { get;  }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"termDuration",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailTermDuration { get;  }
        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"End date of the term in UTC time.",
        SerializedName = @"termEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RenewalTermDetailTermEndDate { get;  }
        /// <summary>The name of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the reseller.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerDescription { get;  }
        /// <summary>The MPN ID of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The MPN ID of the reseller.",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get;  }
        /// <summary>Unique identifier of the linked resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Unique identifier of the linked resource.",
        SerializedName = @"resourceUri",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceUri { get;  }
        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for billing
        /// accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The SKU description of the product for which the subscription is purchased. This field is is only available for billing accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get;  }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get; set; }
        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the subscription. This field is not available for Enterprise Agreement billing accounts",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Unknown", "Active", "Disabled", "Deleted", "Warned", "Expiring", "Expired", "AutoRenew", "Cancelled", "Suspended", "Failed")]
        string Status { get;  }
        /// <summary>The ID of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.",
        SerializedName = @"suspensionReasons",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SuspensionReason { get;  }
        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.",
        SerializedName = @"suspensionReasonDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SuspensionReasonDetail { get;  }
        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.",
        SerializedName = @"cancellation",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("NotAllowed", "Allowed")]
        string SystemOverrideCancellation { get;  }
        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The end date in UTC time by when the self-serve cancellation ends.",
        SerializedName = @"cancellationAllowedEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get;  }
        /// <summary>The ID that uniquely identifies a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID that uniquely identifies a tenant.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"termDuration",
        PossibleTypes = new [] { typeof(string) })]
        string TermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"End date of the term in UTC time.",
        SerializedName = @"termEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TermEndDate { get;  }
        /// <summary>Start date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Start date of the term in UTC time.",
        SerializedName = @"termStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TermStartDate { get;  }

    }
    /// A billing subscription alias.
    internal partial interface IBillingSubscriptionAliasInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal
    {
        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Off", "On")]
        string AutoRenew { get; set; }
        /// <summary>The beneficiary of the billing subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBeneficiary Beneficiary { get; set; }
        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        string BeneficiaryObjectId { get; set; }
        /// <summary>The provisioning tenant of the subscription.</summary>
        string BeneficiaryTenantId { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string BillingFrequency { get; set; }
        /// <summary>Dictionary of billing policies associated with the subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionPropertiesBillingPolicies BillingPolicy { get; set; }
        /// <summary>The name of the billing profile.</summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        string BillingProfileId { get; set; }
        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        string BillingProfileName { get; set; }
        /// <summary>The ID of the billing subscription with the subscription alias.</summary>
        string BillingSubscriptionId { get; set; }
        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        string ConsumptionCostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        string CustomerDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        string CustomerId { get; set; }
        /// <summary>The ID that uniquely identifies a customer.</summary>
        string CustomerName { get; set; }
        /// <summary>The name of the billing subscription.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        string EnrollmentAccountDisplayName { get; set; }
        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        string EnrollmentAccountId { get; set; }
        /// <summary>
        /// Enrollment Account Subscription details. This field is available only for the Enterprise Agreement Type billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentAccountSubscriptionDetails EnrollmentAccountSubscriptionDetail { get; set; }
        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        global::System.DateTime? EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get; set; }
        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Active", "Cancelled", "Expired", "Deleted", "TransferredOut", "Transferring", "Inactive")]
        string EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get; set; }
        /// <summary>The name of the invoice section.</summary>
        string InvoiceSectionDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionId { get; set; }
        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionName { get; set; }
        /// <summary>
        /// The last month's charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement billing
        /// accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount LastMonthCharge { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string LastMonthChargeCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? LastMonthChargeValue { get; set; }
        /// <summary>
        /// The current month to date charges. This field is only available for usage based subscriptions of Microsoft Customer Agreement
        /// billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAmount MonthToDateCharge { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string MonthToDateChargeCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? MonthToDateChargeValue { get; set; }
        /// <summary>Next billing cycle details of the subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.INextBillingCycleDetails NextBillingCycleDetail { get; set; }
        /// <summary>Billing frequency of the product under the subscription.</summary>
        string NextBillingCycleDetailBillingFrequency { get; set; }
        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        string OfferId { get; set; }
        /// <summary>
        /// The status of an operation on the subscription. When None, there is no ongoing operation. When LockedForUpdate, write
        /// operations will be blocked on the Billing Subscription. Other is the default value and you may need to refer to the latest
        /// API version for more details.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "LockedForUpdate")]
        string OperationStatus { get; set; }
        /// <summary>
        /// The category of the product for which the subscription is purchased. Possible values include: AzureSupport, Hardware,
        /// ReservationOrder, SaaS, SavingsPlanOrder, Software, UsageBased, Other.
        /// </summary>
        string ProductCategory { get; set; }
        /// <summary>Type of the product for which the subscription is purchased.</summary>
        string ProductType { get; set; }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        string ProductTypeId { get; set; }
        /// <summary>The properties of a(n) BillingSubscriptionAlias</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionAliasProperties Property { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get; set; }
        /// <summary>The tenant in which the subscription is provisioned.</summary>
        string ProvisioningTenantId { get; set; }
        /// <summary>Purchase date of the product in UTC time.</summary>
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        long? Quantity { get; set; }
        /// <summary>Details for the next renewal term of a subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IRenewalTermDetails RenewalTermDetail { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string RenewalTermDetailBillingFrequency { get; set; }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        string RenewalTermDetailProductId { get; set; }
        /// <summary>Type Id of the product for which the subscription is purchased.</summary>
        string RenewalTermDetailProductTypeId { get; set; }
        /// <summary>The quantity of licenses or fulfillment units for the subscription.</summary>
        long? RenewalTermDetailQuantity { get; set; }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        string RenewalTermDetailSkuId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string RenewalTermDetailTermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        global::System.DateTime? RenewalTermDetailTermEndDate { get; set; }
        /// <summary>
        /// Reseller for this subscription. The fields is not available for Microsoft Partner Agreement billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IReseller Reseller { get; set; }
        /// <summary>The name of the reseller.</summary>
        string ResellerDescription { get; set; }
        /// <summary>The MPN ID of the reseller.</summary>
        string ResellerId { get; set; }
        /// <summary>Unique identifier of the linked resource.</summary>
        string ResourceUri { get; set; }
        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for billing
        /// accounts with agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
        /// </summary>
        string SkuDescription { get; set; }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        string SkuId { get; set; }
        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Unknown", "Active", "Disabled", "Deleted", "Warned", "Expiring", "Expired", "AutoRenew", "Cancelled", "Suspended", "Failed")]
        string Status { get; set; }
        /// <summary>The ID of the subscription.</summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        System.Collections.Generic.List<string> SuspensionReason { get; set; }
        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails> SuspensionReasonDetail { get; set; }
        /// <summary>System imposed policies that regulate behavior of the subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemOverrides SystemOverride { get; set; }
        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("NotAllowed", "Allowed")]
        string SystemOverrideCancellation { get; set; }
        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get; set; }
        /// <summary>The ID that uniquely identifies a tenant.</summary>
        string TenantId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string TermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        global::System.DateTime? TermEndDate { get; set; }
        /// <summary>Start date of the term in UTC time.</summary>
        global::System.DateTime? TermStartDate { get; set; }

    }
}