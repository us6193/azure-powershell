// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>Request parameters that are provided to split the billing subscription.</summary>
    public partial class BillingSubscriptionSplitRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionSplitRequest,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionSplitRequestInternal
    {

        /// <summary>Backing field for <see cref="BillingFrequency" /> property.</summary>
        private string _billingFrequency;

        /// <summary>
        /// The billing frequency of the target subscription in the ISO8601 format. Example: P1M, P3M, P1Y"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string BillingFrequency { get => this._billingFrequency; set => this._billingFrequency = value; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private int? _quantity;

        /// <summary>
        /// The quantity of the target product to which the subscription needs to be split into.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public int? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="TargetProductTypeId" /> property.</summary>
        private string _targetProductTypeId;

        /// <summary>
        /// The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned
        /// in Get API call and can be retrieved from Catalog API to know the product id to split into.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string TargetProductTypeId { get => this._targetProductTypeId; set => this._targetProductTypeId = value; }

        /// <summary>Backing field for <see cref="TargetSkuId" /> property.</summary>
        private string _targetSkuId;

        /// <summary>
        /// The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned
        /// in Get API call and can be retrieved from Catalog API to know the sku id to split into.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string TargetSkuId { get => this._targetSkuId; set => this._targetSkuId = value; }

        /// <summary>Backing field for <see cref="TermDuration" /> property.</summary>
        private string _termDuration;

        /// <summary>
        /// The term duration of the target in ISO8601 format product to which the subscription needs to be split into. Example: P1M,
        /// P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string TermDuration { get => this._termDuration; set => this._termDuration = value; }

        /// <summary>Creates an new <see cref="BillingSubscriptionSplitRequest" /> instance.</summary>
        public BillingSubscriptionSplitRequest()
        {

        }
    }
    /// Request parameters that are provided to split the billing subscription.
    public partial interface IBillingSubscriptionSplitRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The billing frequency of the target subscription in the ISO8601 format. Example: P1M, P3M, P1Y"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The billing frequency of the target subscription in the ISO8601 format. Example: P1M, P3M, P1Y""",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingFrequency { get; set; }
        /// <summary>
        /// The quantity of the target product to which the subscription needs to be split into.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The quantity of the target product to which the subscription needs to be split into.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>
        /// The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned
        /// in Get API call and can be retrieved from Catalog API to know the product id to split into.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned in Get API call and can be retrieved from Catalog API to know the product id to split into.",
        SerializedName = @"targetProductTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetProductTypeId { get; set; }
        /// <summary>
        /// The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned
        /// in Get API call and can be retrieved from Catalog API to know the sku id to split into.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned in Get API call and can be retrieved from Catalog API to know the sku id to split into.",
        SerializedName = @"targetSkuId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSkuId { get; set; }
        /// <summary>
        /// The term duration of the target in ISO8601 format product to which the subscription needs to be split into. Example: P1M,
        /// P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The term duration of the target in ISO8601 format product to which the subscription needs to be split into. Example: P1M, P1Y",
        SerializedName = @"termDuration",
        PossibleTypes = new [] { typeof(string) })]
        string TermDuration { get; set; }

    }
    /// Request parameters that are provided to split the billing subscription.
    internal partial interface IBillingSubscriptionSplitRequestInternal

    {
        /// <summary>
        /// The billing frequency of the target subscription in the ISO8601 format. Example: P1M, P3M, P1Y"
        /// </summary>
        string BillingFrequency { get; set; }
        /// <summary>
        /// The quantity of the target product to which the subscription needs to be split into.
        /// </summary>
        int? Quantity { get; set; }
        /// <summary>
        /// The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned
        /// in Get API call and can be retrieved from Catalog API to know the product id to split into.
        /// </summary>
        string TargetProductTypeId { get; set; }
        /// <summary>
        /// The ID of the target product to which the subscription needs to be split into. This value is not same as the value returned
        /// in Get API call and can be retrieved from Catalog API to know the sku id to split into.
        /// </summary>
        string TargetSkuId { get; set; }
        /// <summary>
        /// The term duration of the target in ISO8601 format product to which the subscription needs to be split into. Example: P1M,
        /// P1Y
        /// </summary>
        string TermDuration { get; set; }

    }
}