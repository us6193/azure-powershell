// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The billing properties of a subscription.</summary>
    public partial class BillingSubscriptionProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject into a new instance of <see cref="BillingSubscriptionProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal BillingSubscriptionProperties(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_beneficiary = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("beneficiary"), out var __jsonBeneficiary) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Beneficiary.FromJson(__jsonBeneficiary) : _beneficiary;}
            {_enrollmentAccountSubscriptionDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("enrollmentAccountSubscriptionDetails"), out var __jsonEnrollmentAccountSubscriptionDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.EnrollmentAccountSubscriptionDetails.FromJson(__jsonEnrollmentAccountSubscriptionDetails) : _enrollmentAccountSubscriptionDetail;}
            {_lastMonthCharge = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("lastMonthCharges"), out var __jsonLastMonthCharges) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Amount.FromJson(__jsonLastMonthCharges) : _lastMonthCharge;}
            {_monthToDateCharge = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("monthToDateCharges"), out var __jsonMonthToDateCharges) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Amount.FromJson(__jsonMonthToDateCharges) : _monthToDateCharge;}
            {_nextBillingCycleDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("nextBillingCycleDetails"), out var __jsonNextBillingCycleDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.NextBillingCycleDetails.FromJson(__jsonNextBillingCycleDetails) : _nextBillingCycleDetail;}
            {_reseller = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("reseller"), out var __jsonReseller) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Reseller.FromJson(__jsonReseller) : _reseller;}
            {_renewalTermDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("renewalTermDetails"), out var __jsonRenewalTermDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.RenewalTermDetails.FromJson(__jsonRenewalTermDetails) : _renewalTermDetail;}
            {_systemOverride = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("systemOverrides"), out var __jsonSystemOverrides) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.SystemOverrides.FromJson(__jsonSystemOverrides) : _systemOverride;}
            {_autoRenew = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("autoRenew"), out var __jsonAutoRenew) ? (string)__jsonAutoRenew : (string)_autoRenew;}
            {_beneficiaryTenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("beneficiaryTenantId"), out var __jsonBeneficiaryTenantId) ? (string)__jsonBeneficiaryTenantId : (string)_beneficiaryTenantId;}
            {_billingFrequency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingFrequency"), out var __jsonBillingFrequency) ? (string)__jsonBillingFrequency : (string)_billingFrequency;}
            {_billingProfileId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingProfileId"), out var __jsonBillingProfileId) ? (string)__jsonBillingProfileId : (string)_billingProfileId;}
            {_billingPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("billingPolicies"), out var __jsonBillingPolicies) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingSubscriptionPropertiesBillingPolicies.FromJson(__jsonBillingPolicies) : _billingPolicy;}
            {_billingProfileDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingProfileDisplayName"), out var __jsonBillingProfileDisplayName) ? (string)__jsonBillingProfileDisplayName : (string)_billingProfileDisplayName;}
            {_billingProfileName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingProfileName"), out var __jsonBillingProfileName) ? (string)__jsonBillingProfileName : (string)_billingProfileName;}
            {_consumptionCostCenter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("consumptionCostCenter"), out var __jsonConsumptionCostCenter) ? (string)__jsonConsumptionCostCenter : (string)_consumptionCostCenter;}
            {_customerId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("customerId"), out var __jsonCustomerId) ? (string)__jsonCustomerId : (string)_customerId;}
            {_customerDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("customerDisplayName"), out var __jsonCustomerDisplayName) ? (string)__jsonCustomerDisplayName : (string)_customerDisplayName;}
            {_customerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("customerName"), out var __jsonCustomerName) ? (string)__jsonCustomerName : (string)_customerName;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)_displayName;}
            {_enrollmentAccountId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("enrollmentAccountId"), out var __jsonEnrollmentAccountId) ? (string)__jsonEnrollmentAccountId : (string)_enrollmentAccountId;}
            {_enrollmentAccountDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("enrollmentAccountDisplayName"), out var __jsonEnrollmentAccountDisplayName) ? (string)__jsonEnrollmentAccountDisplayName : (string)_enrollmentAccountDisplayName;}
            {_invoiceSectionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceSectionId"), out var __jsonInvoiceSectionId) ? (string)__jsonInvoiceSectionId : (string)_invoiceSectionId;}
            {_invoiceSectionDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceSectionDisplayName"), out var __jsonInvoiceSectionDisplayName) ? (string)__jsonInvoiceSectionDisplayName : (string)_invoiceSectionDisplayName;}
            {_invoiceSectionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("invoiceSectionName"), out var __jsonInvoiceSectionName) ? (string)__jsonInvoiceSectionName : (string)_invoiceSectionName;}
            {_offerId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("offerId"), out var __jsonOfferId) ? (string)__jsonOfferId : (string)_offerId;}
            {_productCategory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("productCategory"), out var __jsonProductCategory) ? (string)__jsonProductCategory : (string)_productCategory;}
            {_productType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("productType"), out var __jsonProductType) ? (string)__jsonProductType : (string)_productType;}
            {_productTypeId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("productTypeId"), out var __jsonProductTypeId) ? (string)__jsonProductTypeId : (string)_productTypeId;}
            {_purchaseDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("purchaseDate"), out var __jsonPurchaseDate) ? global::System.DateTime.TryParse((string)__jsonPurchaseDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonPurchaseDateValue) ? __jsonPurchaseDateValue : _purchaseDate : _purchaseDate;}
            {_quantity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber>("quantity"), out var __jsonQuantity) ? (long?)__jsonQuantity : _quantity;}
            {_skuId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("skuId"), out var __jsonSkuId) ? (string)__jsonSkuId : (string)_skuId;}
            {_skuDescription = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("skuDescription"), out var __jsonSkuDescription) ? (string)__jsonSkuDescription : (string)_skuDescription;}
            {_resourceUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("resourceUri"), out var __jsonResourceUri) ? (string)__jsonResourceUri : (string)_resourceUri;}
            {_termDuration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("termDuration"), out var __jsonTermDuration) ? (string)__jsonTermDuration : (string)_termDuration;}
            {_termStartDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("termStartDate"), out var __jsonTermStartDate) ? global::System.DateTime.TryParse((string)__jsonTermStartDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonTermStartDateValue) ? __jsonTermStartDateValue : _termStartDate : _termStartDate;}
            {_termEndDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("termEndDate"), out var __jsonTermEndDate) ? global::System.DateTime.TryParse((string)__jsonTermEndDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonTermEndDateValue) ? __jsonTermEndDateValue : _termEndDate : _termEndDate;}
            {_provisioningTenantId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("provisioningTenantId"), out var __jsonProvisioningTenantId) ? (string)__jsonProvisioningTenantId : (string)_provisioningTenantId;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)_status;}
            {_operationStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("operationStatus"), out var __jsonOperationStatus) ? (string)__jsonOperationStatus : (string)_operationStatus;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)_provisioningState;}
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)_subscriptionId;}
            {_suspensionReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("suspensionReasons"), out var __jsonSuspensionReasons) ? If( __jsonSuspensionReasons as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<System.Collections.Generic.List<string>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : _suspensionReason;}
            {_suspensionReasonDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("suspensionReasonDetails"), out var __jsonSuspensionReasonDetails) ? If( __jsonSuspensionReasonDetails as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionStatusDetails) (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingSubscriptionStatusDetails.FromJson(__p) )) ))() : null : _suspensionReasonDetail;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingSubscriptionProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json ? new BillingSubscriptionProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="BillingSubscriptionProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="BillingSubscriptionProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._beneficiary ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._beneficiary.ToJson(null,serializationMode) : null, "beneficiary" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._enrollmentAccountSubscriptionDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._enrollmentAccountSubscriptionDetail.ToJson(null,serializationMode) : null, "enrollmentAccountSubscriptionDetails" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._lastMonthCharge ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._lastMonthCharge.ToJson(null,serializationMode) : null, "lastMonthCharges" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._monthToDateCharge ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._monthToDateCharge.ToJson(null,serializationMode) : null, "monthToDateCharges" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._nextBillingCycleDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._nextBillingCycleDetail.ToJson(null,serializationMode) : null, "nextBillingCycleDetails" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._reseller ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._reseller.ToJson(null,serializationMode) : null, "reseller" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._renewalTermDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._renewalTermDetail.ToJson(null,serializationMode) : null, "renewalTermDetails" ,container.Add );
            }
            AddIf( null != this._systemOverride ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._systemOverride.ToJson(null,serializationMode) : null, "systemOverrides" ,container.Add );
            AddIf( null != (((object)this._autoRenew)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._autoRenew.ToString()) : null, "autoRenew" ,container.Add );
            AddIf( null != (((object)this._beneficiaryTenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._beneficiaryTenantId.ToString()) : null, "beneficiaryTenantId" ,container.Add );
            AddIf( null != (((object)this._billingFrequency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingFrequency.ToString()) : null, "billingFrequency" ,container.Add );
            AddIf( null != (((object)this._billingProfileId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingProfileId.ToString()) : null, "billingProfileId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._billingPolicy ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._billingPolicy.ToJson(null,serializationMode) : null, "billingPolicies" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._billingProfileDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingProfileDisplayName.ToString()) : null, "billingProfileDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._billingProfileName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingProfileName.ToString()) : null, "billingProfileName" ,container.Add );
            }
            AddIf( null != (((object)this._consumptionCostCenter)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._consumptionCostCenter.ToString()) : null, "consumptionCostCenter" ,container.Add );
            AddIf( null != (((object)this._customerId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._customerId.ToString()) : null, "customerId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._customerDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._customerDisplayName.ToString()) : null, "customerDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._customerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._customerName.ToString()) : null, "customerName" ,container.Add );
            }
            AddIf( null != (((object)this._displayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._enrollmentAccountId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._enrollmentAccountId.ToString()) : null, "enrollmentAccountId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._enrollmentAccountDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._enrollmentAccountDisplayName.ToString()) : null, "enrollmentAccountDisplayName" ,container.Add );
            }
            AddIf( null != (((object)this._invoiceSectionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceSectionId.ToString()) : null, "invoiceSectionId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._invoiceSectionDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceSectionDisplayName.ToString()) : null, "invoiceSectionDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._invoiceSectionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._invoiceSectionName.ToString()) : null, "invoiceSectionName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._offerId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._offerId.ToString()) : null, "offerId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._productCategory)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._productCategory.ToString()) : null, "productCategory" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._productType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._productType.ToString()) : null, "productType" ,container.Add );
            }
            AddIf( null != (((object)this._productTypeId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._productTypeId.ToString()) : null, "productTypeId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._purchaseDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._purchaseDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "purchaseDate" ,container.Add );
            }
            AddIf( null != this._quantity ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber((long)this._quantity) : null, "quantity" ,container.Add );
            AddIf( null != (((object)this._skuId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._skuId.ToString()) : null, "skuId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._skuDescription)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._skuDescription.ToString()) : null, "skuDescription" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._resourceUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._resourceUri.ToString()) : null, "resourceUri" ,container.Add );
            }
            AddIf( null != (((object)this._termDuration)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._termDuration.ToString()) : null, "termDuration" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._termStartDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._termStartDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "termStartDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._termEndDate ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._termEndDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "termEndDate" ,container.Add );
            }
            AddIf( null != (((object)this._provisioningTenantId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._provisioningTenantId.ToString()) : null, "provisioningTenantId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._operationStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._operationStatus.ToString()) : null, "operationStatus" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                if (null != this._suspensionReason)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                    foreach( var __x in this._suspensionReason )
                    {
                        AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                    }
                    container.Add("suspensionReasons",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                if (null != this._suspensionReasonDetail)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                    foreach( var __s in this._suspensionReasonDetail )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("suspensionReasonDetails",__r);
                }
            }
            AfterToJson(ref container);
            return container;
        }
    }
}