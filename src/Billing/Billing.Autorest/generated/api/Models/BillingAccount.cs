// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A billing account.</summary>
    public partial class BillingAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccount,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1 __proxyResourceWithTags1 = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ProxyResourceWithTags1();

        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountStatus; }

        /// <summary>Reason for the specified billing account status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AccountStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountStatusReasonCode; }

        /// <summary>The tier of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AccountSubType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountSubType; }

        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountType; }

        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AgreementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AgreementType; }

        /// <summary>
        /// Identifies the billing relationships represented by a billing account. The billing relationship may be between Microsoft,
        /// the customer, and/or a third-party.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> BillingRelationshipType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).BillingRelationshipType; }

        /// <summary>The billing account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>The billing cycle for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailBillingCycle; }

        /// <summary>The channel type of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailChannel; }

        /// <summary>The cloud of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCloud; }

        /// <summary>The country code of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCountryCode; }

        /// <summary>The billing currency for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCurrency; }

        /// <summary>The end date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? EnrollmentDetailEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailEndDate = value ?? default(global::System.DateTime); }

        /// <summary>The billing account extension opted by the company.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailExtendedTermOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailExtendedTermOption; }

        /// <summary>The billing account name of the partner or the customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailIndirectRelationshipInfoBillingAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfoBillingAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfoBillingAccountName = value ?? null; }

        /// <summary>The billing profile name of the partner or the customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailIndirectRelationshipInfoBillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfoBillingProfileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfoBillingProfileName = value ?? null; }

        /// <summary>The display name of the partner or customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailIndirectRelationshipInfoDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfoDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfoDisplayName = value ?? null; }

        /// <summary>The contact who receives invoices of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailInvoiceRecipient { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailInvoiceRecipient; }

        /// <summary>The language for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailLanguage; }

        /// <summary>Markup status of enrollment, applicable only for indirect enrollments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailMarkupStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailMarkupStatus; }

        /// <summary>The purchase order number of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailPoNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailPoNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailPoNumber = value ?? null; }

        /// <summary>The start date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? EnrollmentDetailStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailStartDate = value ?? default(global::System.DateTime); }

        /// <summary>The support coverage period for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailSupportCoverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailSupportCoverage; }

        /// <summary>The support level offer associated with an enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailSupportLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailSupportLevel; }

        /// <summary>Indicates whether or not the billing account has any billing profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? HasNoBillingProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).HasNoBillingProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).HasNoBillingProfile = value ?? default(bool); }

        /// <summary>Indicates whether user has read access to the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? HasReadAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).HasReadAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).HasReadAccess = value ?? default(bool); }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id; }

        /// <summary>Internal Acessors for AccountStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.AccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountStatus = value; }

        /// <summary>Internal Acessors for AccountStatusReasonCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.AccountStatusReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountStatusReasonCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountStatusReasonCode = value; }

        /// <summary>Internal Acessors for AccountSubType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.AccountSubType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountSubType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountSubType = value; }

        /// <summary>Internal Acessors for AccountType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.AccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AccountType = value; }

        /// <summary>Internal Acessors for AgreementType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.AgreementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AgreementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).AgreementType = value; }

        /// <summary>Internal Acessors for BillingRelationshipType</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.BillingRelationshipType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).BillingRelationshipType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).BillingRelationshipType = value; }

        /// <summary>Internal Acessors for EnrollmentDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesEnrollmentDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetail = value; }

        /// <summary>Internal Acessors for EnrollmentDetailBillingCycle</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailBillingCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailBillingCycle = value; }

        /// <summary>Internal Acessors for EnrollmentDetailChannel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailChannel = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCloud</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCloud; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCloud = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCountryCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCountryCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCountryCode = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailCurrency = value; }

        /// <summary>Internal Acessors for EnrollmentDetailExtendedTermOption</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailExtendedTermOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailExtendedTermOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailExtendedTermOption = value; }

        /// <summary>Internal Acessors for EnrollmentDetailIndirectRelationshipInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentDetailsIndirectRelationshipInfo Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailIndirectRelationshipInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailIndirectRelationshipInfo = value; }

        /// <summary>Internal Acessors for EnrollmentDetailInvoiceRecipient</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailInvoiceRecipient { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailInvoiceRecipient; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailInvoiceRecipient = value; }

        /// <summary>Internal Acessors for EnrollmentDetailLanguage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailLanguage = value; }

        /// <summary>Internal Acessors for EnrollmentDetailMarkupStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailMarkupStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailMarkupStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailMarkupStatus = value; }

        /// <summary>Internal Acessors for EnrollmentDetailSupportCoverage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailSupportCoverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailSupportCoverage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailSupportCoverage = value; }

        /// <summary>Internal Acessors for EnrollmentDetailSupportLevel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.EnrollmentDetailSupportLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailSupportLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).EnrollmentDetailSupportLevel = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingAccountProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Qualification</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.Qualification { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).Qualification; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).Qualification = value; }

        /// <summary>Internal Acessors for RegistrationNumber</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesRegistrationNumber Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.RegistrationNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumber = value; }

        /// <summary>Internal Acessors for RegistrationNumberRequired</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.RegistrationNumberRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberRequired; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberRequired = value; }

        /// <summary>Internal Acessors for RegistrationNumberType</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.RegistrationNumberType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberType = value; }

        /// <summary>Internal Acessors for SoldTo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesSoldTo Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountInternal.SoldTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldTo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldTo = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Name; }

        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string NotificationEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).NotificationEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).NotificationEmailAddress = value ?? null; }

        /// <summary>
        /// The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments
        /// on the billing account and all purchases are provisioned in this tenant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrimaryBillingTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).PrimaryBillingTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).PrimaryBillingTenantId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountProperties _property;

        /// <summary>A billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingAccountProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Qualifications for pricing on a billing account. Values may be Commercial, Education, Charity or Government.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> Qualification { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).Qualification; }

        /// <summary>
        /// The unique identification number of the organization linked with the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RegistrationNumberId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberId = value ?? null; }

        /// <summary>Identifies if the registration number is required for the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? RegistrationNumberRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberRequired; }

        /// <summary>
        /// The types of registration number allowed based on the country of the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> RegistrationNumberType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).RegistrationNumberType; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToAddressLine1; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToAddressLine1 = value ?? null; }

        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToAddressLine2; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToAddressLine2 = value ?? null; }

        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToAddressLine3; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToAddressLine3 = value ?? null; }

        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToCity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToCity = value ?? null; }

        /// <summary>Company name. Optional for MCA Individual (Pay-as-you-go).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToCompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToCompanyName = value ?? null; }

        /// <summary>Country code uses ISO 3166-1 Alpha-2 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToCountry; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToCountry = value ?? null; }

        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToDistrict { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToDistrict; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToDistrict = value ?? null; }

        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToEmail = value ?? null; }

        /// <summary>First name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToFirstName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToFirstName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToFirstName = value ?? null; }

        /// <summary>Indicates if the address is incomplete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? SoldToIsValidAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToIsValidAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToIsValidAddress = value ?? default(bool); }

        /// <summary>Last name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToLastName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToLastName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToLastName = value ?? null; }

        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToMiddleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToMiddleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToMiddleName = value ?? null; }

        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToPhoneNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToPhoneNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToPhoneNumber = value ?? null; }

        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToPostalCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToPostalCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToPostalCode = value ?? null; }

        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).SoldToRegion = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>
        /// Dictionary of metadata associated with the resource. It may not be populated for all resource types. Maximum key/value
        /// length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? /
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag = value ?? null /* model class */; }

        /// <summary>A list of tax identifiers for the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITaxIdentifier> TaxId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).TaxId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesInternal)Property).TaxId = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IResourceInternal)__proxyResourceWithTags1).Type; }

        /// <summary>Creates an new <see cref="BillingAccount" /> instance.</summary>
        public BillingAccount()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
            await eventListener.AssertObjectIsValid(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
        }
    }
    /// A billing account.
    public partial interface IBillingAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1
    {
        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current status of the billing account.",
        SerializedName = @"accountStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "UnderReview", "Disabled", "Deleted", "Extended", "Pending", "New", "Expired", "Terminated", "Transferred")]
        string AccountStatus { get;  }
        /// <summary>Reason for the specified billing account status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Reason for the specified billing account status.",
        SerializedName = @"accountStatusReasonCode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "UnusualActivity", "ManuallyTerminated", "Expired", "Transferred", "TerminateProcessing")]
        string AccountStatusReasonCode { get;  }
        /// <summary>The tier of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The tier of the account.",
        SerializedName = @"accountSubType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "Individual", "Professional", "Enterprise")]
        string AccountSubType { get;  }
        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of customer.",
        SerializedName = @"accountType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Enterprise", "Individual", "Partner", "Reseller", "ClassicPartner", "Internal", "Tenant", "Business")]
        string AccountType { get;  }
        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of agreement.",
        SerializedName = @"agreementType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "MicrosoftCustomerAgreement", "EnterpriseAgreement", "MicrosoftOnlineServicesProgram", "MicrosoftPartnerAgreement")]
        string AgreementType { get;  }
        /// <summary>
        /// Identifies the billing relationships represented by a billing account. The billing relationship may be between Microsoft,
        /// the customer, and/or a third-party.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Identifies the billing relationships represented by a billing account. The billing relationship may be between Microsoft, the customer, and/or a third-party.",
        SerializedName = @"billingRelationshipTypes",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Direct", "IndirectCustomer", "IndirectPartner", "CSPPartner", "CSPCustomer")]
        System.Collections.Generic.List<string> BillingRelationshipType { get;  }
        /// <summary>The billing account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The billing account name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The billing cycle for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The billing cycle for the enrollment.",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailBillingCycle { get;  }
        /// <summary>The channel type of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The channel type of the enrollment.",
        SerializedName = @"channel",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailChannel { get;  }
        /// <summary>The cloud of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The cloud of the enrollment.",
        SerializedName = @"cloud",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCloud { get;  }
        /// <summary>The country code of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The country code of the enrollment.",
        SerializedName = @"countryCode",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCountryCode { get;  }
        /// <summary>The billing currency for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The billing currency for the enrollment.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCurrency { get;  }
        /// <summary>The end date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The end date of the enrollment.",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EnrollmentDetailEndDate { get; set; }
        /// <summary>The billing account extension opted by the company.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The billing account extension opted by the company.",
        SerializedName = @"extendedTermOption",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Opted-In", "Opted-Out")]
        string EnrollmentDetailExtendedTermOption { get;  }
        /// <summary>The billing account name of the partner or the customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The billing account name of the partner or the customer for an indirect motion.",
        SerializedName = @"billingAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailIndirectRelationshipInfoBillingAccountName { get; set; }
        /// <summary>The billing profile name of the partner or the customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The billing profile name of the partner or the customer for an indirect motion.",
        SerializedName = @"billingProfileName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailIndirectRelationshipInfoBillingProfileName { get; set; }
        /// <summary>The display name of the partner or customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The display name of the partner or customer for an indirect motion.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailIndirectRelationshipInfoDisplayName { get; set; }
        /// <summary>The contact who receives invoices of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The contact who receives invoices of the enrollment.",
        SerializedName = @"invoiceRecipient",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailInvoiceRecipient { get;  }
        /// <summary>The language for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The language for the enrollment.",
        SerializedName = @"language",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailLanguage { get;  }
        /// <summary>Markup status of enrollment, applicable only for indirect enrollments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Markup status of enrollment, applicable only for indirect enrollments.",
        SerializedName = @"markupStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Disabled", "Preview", "Published", "Locked")]
        string EnrollmentDetailMarkupStatus { get;  }
        /// <summary>The purchase order number of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The purchase order number of the enrollment.",
        SerializedName = @"poNumber",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailPoNumber { get; set; }
        /// <summary>The start date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The start date of the enrollment.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EnrollmentDetailStartDate { get; set; }
        /// <summary>The support coverage period for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The support coverage period for the enrollment.",
        SerializedName = @"supportCoverage",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailSupportCoverage { get;  }
        /// <summary>The support level offer associated with an enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The support level offer associated with an enrollment.",
        SerializedName = @"supportLevel",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Standard", "Pro-Direct", "Developer")]
        string EnrollmentDetailSupportLevel { get;  }
        /// <summary>Indicates whether or not the billing account has any billing profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether or not the billing account has any billing profiles.",
        SerializedName = @"hasNoBillingProfiles",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasNoBillingProfile { get; set; }
        /// <summary>Indicates whether user has read access to the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether user has read access to the billing account.",
        SerializedName = @"hasReadAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasReadAccess { get; set; }
        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.",
        SerializedName = @"notificationEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationEmailAddress { get; set; }
        /// <summary>
        /// The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments
        /// on the billing account and all purchases are provisioned in this tenant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments on the billing account and all purchases are provisioned in this tenant.",
        SerializedName = @"primaryBillingTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryBillingTenantId { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the resource during a long-running operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get;  }
        /// <summary>
        /// Qualifications for pricing on a billing account. Values may be Commercial, Education, Charity or Government.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Qualifications for pricing on a billing account. Values may be Commercial, Education, Charity or Government.",
        SerializedName = @"qualifications",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Qualification { get;  }
        /// <summary>
        /// The unique identification number of the organization linked with the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The unique identification number of the organization linked with the billing account.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationNumberId { get; set; }
        /// <summary>Identifies if the registration number is required for the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Identifies if the registration number is required for the billing account.",
        SerializedName = @"required",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RegistrationNumberRequired { get;  }
        /// <summary>
        /// The types of registration number allowed based on the country of the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The types of registration number allowed based on the country of the billing account.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> RegistrationNumberType { get;  }
        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address line 1.",
        SerializedName = @"addressLine1",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address line 2.",
        SerializedName = @"addressLine2",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address line 3.",
        SerializedName = @"addressLine3",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine3 { get; set; }
        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address city.",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCity { get; set; }
        /// <summary>Company name. Optional for MCA Individual (Pay-as-you-go).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Company name. Optional for MCA Individual (Pay-as-you-go).",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCompanyName { get; set; }
        /// <summary>Country code uses ISO 3166-1 Alpha-2 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Country code uses ISO 3166-1 Alpha-2 format.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCountry { get; set; }
        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address district.",
        SerializedName = @"district",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToDistrict { get; set; }
        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Email address.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToEmail { get; set; }
        /// <summary>First name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"First name. Optional for MCA Enterprise.",
        SerializedName = @"firstName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToFirstName { get; set; }
        /// <summary>Indicates if the address is incomplete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates if the address is incomplete.",
        SerializedName = @"isValidAddress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SoldToIsValidAddress { get; set; }
        /// <summary>Last name. Optional for MCA Enterprise.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Last name. Optional for MCA Enterprise.",
        SerializedName = @"lastName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToLastName { get; set; }
        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Middle name.",
        SerializedName = @"middleName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Phone number.",
        SerializedName = @"phoneNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Postal code.",
        SerializedName = @"postalCode",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToPostalCode { get; set; }
        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Address region.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToRegion { get; set; }
        /// <summary>A list of tax identifiers for the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of tax identifiers for the billing account.",
        SerializedName = @"taxIds",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITaxIdentifier) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITaxIdentifier> TaxId { get; set; }

    }
    /// A billing account.
    internal partial interface IBillingAccountInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IProxyResourceWithTags1Internal
    {
        /// <summary>The current status of the billing account.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Active", "UnderReview", "Disabled", "Deleted", "Extended", "Pending", "New", "Expired", "Terminated", "Transferred")]
        string AccountStatus { get; set; }
        /// <summary>Reason for the specified billing account status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "UnusualActivity", "ManuallyTerminated", "Expired", "Transferred", "TerminateProcessing")]
        string AccountStatusReasonCode { get; set; }
        /// <summary>The tier of the account.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "None", "Individual", "Professional", "Enterprise")]
        string AccountSubType { get; set; }
        /// <summary>The type of customer.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Enterprise", "Individual", "Partner", "Reseller", "ClassicPartner", "Internal", "Tenant", "Business")]
        string AccountType { get; set; }
        /// <summary>The type of agreement.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "MicrosoftCustomerAgreement", "EnterpriseAgreement", "MicrosoftOnlineServicesProgram", "MicrosoftPartnerAgreement")]
        string AgreementType { get; set; }
        /// <summary>
        /// Identifies the billing relationships represented by a billing account. The billing relationship may be between Microsoft,
        /// the customer, and/or a third-party.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Direct", "IndirectCustomer", "IndirectPartner", "CSPPartner", "CSPCustomer")]
        System.Collections.Generic.List<string> BillingRelationshipType { get; set; }
        /// <summary>The billing account name.</summary>
        string DisplayName { get; set; }
        /// <summary>The properties of an enrollment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesEnrollmentDetails EnrollmentDetail { get; set; }
        /// <summary>The billing cycle for the enrollment.</summary>
        string EnrollmentDetailBillingCycle { get; set; }
        /// <summary>The channel type of the enrollment.</summary>
        string EnrollmentDetailChannel { get; set; }
        /// <summary>The cloud of the enrollment.</summary>
        string EnrollmentDetailCloud { get; set; }
        /// <summary>The country code of the enrollment.</summary>
        string EnrollmentDetailCountryCode { get; set; }
        /// <summary>The billing currency for the enrollment.</summary>
        string EnrollmentDetailCurrency { get; set; }
        /// <summary>The end date of the enrollment.</summary>
        global::System.DateTime? EnrollmentDetailEndDate { get; set; }
        /// <summary>The billing account extension opted by the company.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Opted-In", "Opted-Out")]
        string EnrollmentDetailExtendedTermOption { get; set; }
        /// <summary>
        /// The properties of an enrollment which are applicable only for indirect enrollments.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IEnrollmentDetailsIndirectRelationshipInfo EnrollmentDetailIndirectRelationshipInfo { get; set; }
        /// <summary>The billing account name of the partner or the customer for an indirect motion.</summary>
        string EnrollmentDetailIndirectRelationshipInfoBillingAccountName { get; set; }
        /// <summary>The billing profile name of the partner or the customer for an indirect motion.</summary>
        string EnrollmentDetailIndirectRelationshipInfoBillingProfileName { get; set; }
        /// <summary>The display name of the partner or customer for an indirect motion.</summary>
        string EnrollmentDetailIndirectRelationshipInfoDisplayName { get; set; }
        /// <summary>The contact who receives invoices of the enrollment.</summary>
        string EnrollmentDetailInvoiceRecipient { get; set; }
        /// <summary>The language for the enrollment.</summary>
        string EnrollmentDetailLanguage { get; set; }
        /// <summary>Markup status of enrollment, applicable only for indirect enrollments.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Disabled", "Preview", "Published", "Locked")]
        string EnrollmentDetailMarkupStatus { get; set; }
        /// <summary>The purchase order number of the enrollment.</summary>
        string EnrollmentDetailPoNumber { get; set; }
        /// <summary>The start date of the enrollment.</summary>
        global::System.DateTime? EnrollmentDetailStartDate { get; set; }
        /// <summary>The support coverage period for the enrollment.</summary>
        string EnrollmentDetailSupportCoverage { get; set; }
        /// <summary>The support level offer associated with an enrollment.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Other", "Standard", "Pro-Direct", "Developer")]
        string EnrollmentDetailSupportLevel { get; set; }
        /// <summary>Indicates whether or not the billing account has any billing profiles.</summary>
        bool? HasNoBillingProfile { get; set; }
        /// <summary>Indicates whether user has read access to the billing account.</summary>
        bool? HasReadAccess { get; set; }
        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        string NotificationEmailAddress { get; set; }
        /// <summary>
        /// The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments
        /// on the billing account and all purchases are provisioned in this tenant.
        /// </summary>
        string PrimaryBillingTenantId { get; set; }
        /// <summary>A billing account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountProperties Property { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Billing.PSArgumentCompleterAttribute("Succeeded", "Canceled", "Failed", "New", "Pending", "Provisioning", "PendingBilling", "ConfirmedBilling", "Creating", "Created", "Expired")]
        string ProvisioningState { get; set; }
        /// <summary>
        /// Qualifications for pricing on a billing account. Values may be Commercial, Education, Charity or Government.
        /// </summary>
        System.Collections.Generic.List<string> Qualification { get; set; }
        /// <summary>
        /// Describes the registration number of the organization linked with the billing account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesRegistrationNumber RegistrationNumber { get; set; }
        /// <summary>
        /// The unique identification number of the organization linked with the billing account.
        /// </summary>
        string RegistrationNumberId { get; set; }
        /// <summary>Identifies if the registration number is required for the billing account.</summary>
        bool? RegistrationNumberRequired { get; set; }
        /// <summary>
        /// The types of registration number allowed based on the country of the billing account.
        /// </summary>
        System.Collections.Generic.List<string> RegistrationNumberType { get; set; }
        /// <summary>
        /// The address of the individual or organization that is responsible for the billing account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingAccountPropertiesSoldTo SoldTo { get; set; }
        /// <summary>Address line 1.</summary>
        string SoldToAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        string SoldToAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        string SoldToAddressLine3 { get; set; }
        /// <summary>Address city.</summary>
        string SoldToCity { get; set; }
        /// <summary>Company name. Optional for MCA Individual (Pay-as-you-go).</summary>
        string SoldToCompanyName { get; set; }
        /// <summary>Country code uses ISO 3166-1 Alpha-2 format.</summary>
        string SoldToCountry { get; set; }
        /// <summary>Address district.</summary>
        string SoldToDistrict { get; set; }
        /// <summary>Email address.</summary>
        string SoldToEmail { get; set; }
        /// <summary>First name. Optional for MCA Enterprise.</summary>
        string SoldToFirstName { get; set; }
        /// <summary>Indicates if the address is incomplete.</summary>
        bool? SoldToIsValidAddress { get; set; }
        /// <summary>Last name. Optional for MCA Enterprise.</summary>
        string SoldToLastName { get; set; }
        /// <summary>Middle name.</summary>
        string SoldToMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        string SoldToPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        string SoldToPostalCode { get; set; }
        /// <summary>Address region.</summary>
        string SoldToRegion { get; set; }
        /// <summary>A list of tax identifiers for the billing account.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ITaxIdentifier> TaxId { get; set; }

    }
}