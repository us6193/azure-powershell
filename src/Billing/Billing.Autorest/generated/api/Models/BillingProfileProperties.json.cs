// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A billing profile.</summary>
    public partial class BillingProfileProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject into a new instance of <see cref="BillingProfileProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal BillingProfileProperties(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_billTo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("billTo"), out var __jsonBillTo) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingProfilePropertiesBillTo.FromJson(__jsonBillTo) : _billTo;}
            {_indirectRelationshipInfo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("indirectRelationshipInfo"), out var __jsonIndirectRelationshipInfo) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingProfilePropertiesIndirectRelationshipInfo.FromJson(__jsonIndirectRelationshipInfo) : _indirectRelationshipInfo;}
            {_shipTo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("shipTo"), out var __jsonShipTo) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingProfilePropertiesShipTo.FromJson(__jsonShipTo) : _shipTo;}
            {_soldTo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("soldTo"), out var __jsonSoldTo) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingProfilePropertiesSoldTo.FromJson(__jsonSoldTo) : _soldTo;}
            {_currentPaymentTerm = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("currentPaymentTerm"), out var __jsonCurrentPaymentTerm) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingProfilePropertiesCurrentPaymentTerm.FromJson(__jsonCurrentPaymentTerm) : _currentPaymentTerm;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)_provisioningState;}
            {_billingRelationshipType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("billingRelationshipType"), out var __jsonBillingRelationshipType) ? (string)__jsonBillingRelationshipType : (string)_billingRelationshipType;}
            {_currency = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("currency"), out var __jsonCurrency) ? (string)__jsonCurrency : (string)_currency;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)_displayName;}
            {_enabledAzurePlan = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("enabledAzurePlans"), out var __jsonEnabledAzurePlans) ? If( __jsonEnabledAzurePlans as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAzurePlan>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAzurePlan) (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.AzurePlan.FromJson(__u) )) ))() : null : _enabledAzurePlan;}
            {_hasReadAccess = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonBoolean>("hasReadAccess"), out var __jsonHasReadAccess) ? (bool?)__jsonHasReadAccess : _hasReadAccess;}
            {_invoiceDay = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber>("invoiceDay"), out var __jsonInvoiceDay) ? (int?)__jsonInvoiceDay : _invoiceDay;}
            {_invoiceEmailOptIn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonBoolean>("invoiceEmailOptIn"), out var __jsonInvoiceEmailOptIn) ? (bool?)__jsonInvoiceEmailOptIn : _invoiceEmailOptIn;}
            {_invoiceRecipient = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("invoiceRecipients"), out var __jsonInvoiceRecipients) ? If( __jsonInvoiceRecipients as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<System.Collections.Generic.List<string>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : _invoiceRecipient;}
            {_poNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("poNumber"), out var __jsonPoNumber) ? (string)__jsonPoNumber : (string)_poNumber;}
            {_spendingLimit = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("spendingLimit"), out var __jsonSpendingLimit) ? (string)__jsonSpendingLimit : (string)_spendingLimit;}
            {_spendingLimitDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("spendingLimitDetails"), out var __jsonSpendingLimitDetails) ? If( __jsonSpendingLimitDetails as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISpendingLimitDetails>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.ISpendingLimitDetails) (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.SpendingLimitDetails.FromJson(__k) )) ))() : null : _spendingLimitDetail;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)_status;}
            {_statusReasonCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("statusReasonCode"), out var __jsonStatusReasonCode) ? (string)__jsonStatusReasonCode : (string)_statusReasonCode;}
            {_systemId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString>("systemId"), out var __jsonSystemId) ? (string)__jsonSystemId : (string)_systemId;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject>("tags"), out var __jsonTags) ? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.BillingProfilePropertiesTags.FromJson(__jsonTags) : _tag;}
            {_targetCloud = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("targetClouds"), out var __jsonTargetClouds) ? If( __jsonTargetClouds as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<System.Collections.Generic.List<string>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__g, (__f)=>(string) (__f is Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString __e ? (string)(__e.ToString()) : null)) ))() : null : _targetCloud;}
            {_otherPaymentTerm = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray>("otherPaymentTerms"), out var __jsonOtherPaymentTerms) ? If( __jsonOtherPaymentTerms as Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentTerm>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IPaymentTerm) (Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.PaymentTerm.FromJson(__a) )) ))() : null : _otherPaymentTerm;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingProfileProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingProfileProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IBillingProfileProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject json ? new BillingProfileProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="BillingProfileProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="BillingProfileProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._billTo ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._billTo.ToJson(null,serializationMode) : null, "billTo" ,container.Add );
            AddIf( null != this._indirectRelationshipInfo ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._indirectRelationshipInfo.ToJson(null,serializationMode) : null, "indirectRelationshipInfo" ,container.Add );
            AddIf( null != this._shipTo ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._shipTo.ToJson(null,serializationMode) : null, "shipTo" ,container.Add );
            AddIf( null != this._soldTo ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._soldTo.ToJson(null,serializationMode) : null, "soldTo" ,container.Add );
            AddIf( null != this._currentPaymentTerm ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._currentPaymentTerm.ToJson(null,serializationMode) : null, "currentPaymentTerm" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._billingRelationshipType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._billingRelationshipType.ToString()) : null, "billingRelationshipType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._currency)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._currency.ToString()) : null, "currency" ,container.Add );
            }
            AddIf( null != (((object)this._displayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            if (null != this._enabledAzurePlan)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                foreach( var __x in this._enabledAzurePlan )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("enabledAzurePlans",__w);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._hasReadAccess ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonBoolean((bool)this._hasReadAccess) : null, "hasReadAccess" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._invoiceDay ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNumber((int)this._invoiceDay) : null, "invoiceDay" ,container.Add );
            }
            AddIf( null != this._invoiceEmailOptIn ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonBoolean((bool)this._invoiceEmailOptIn) : null, "invoiceEmailOptIn" ,container.Add );
            if (null != this._invoiceRecipient)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                foreach( var __s in this._invoiceRecipient )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("invoiceRecipients",__r);
            }
            AddIf( null != (((object)this._poNumber)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._poNumber.ToString()) : null, "poNumber" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._spendingLimit)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._spendingLimit.ToString()) : null, "spendingLimit" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                if (null != this._spendingLimitDetail)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                    foreach( var __n in this._spendingLimitDetail )
                    {
                        AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                    }
                    container.Add("spendingLimitDetails",__m);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._statusReasonCode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._statusReasonCode.ToString()) : null, "statusReasonCode" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._systemId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(this._systemId.ToString()) : null, "systemId" ,container.Add );
            }
            AddIf( null != this._tag ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) this._tag.ToJson(null,serializationMode) : null, "tags" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                if (null != this._targetCloud)
                {
                    var __h = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                    foreach( var __i in this._targetCloud )
                    {
                        AddIf(null != (((object)__i)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.JsonString(__i.ToString()) : null ,__h.Add);
                    }
                    container.Add("targetClouds",__h);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.SerializationMode.IncludeRead))
            {
                if (null != this._otherPaymentTerm)
                {
                    var __c = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Json.XNodeArray();
                    foreach( var __d in this._otherPaymentTerm )
                    {
                        AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                    }
                    container.Add("otherPaymentTerms",__c);
                }
            }
            AfterToJson(ref container);
            return container;
        }
    }
}